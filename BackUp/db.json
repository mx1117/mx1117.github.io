{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"source/assets/img/HeadShow.jpg","path":"assets/img/HeadShow.jpg","modified":1,"renderable":0},{"_id":"source/assets/img/favicon.ico","path":"assets/img/favicon.ico","modified":1,"renderable":0},{"_id":"source/assets/img/wechat.png","path":"assets/img/wechat.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"source/assets/img/alipay.jpg","path":"assets/img/alipay.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1524873106012},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1524873106013},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1524873106013},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1524873106014},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1524873106015},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1524873106016},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1524873106015},{"_id":"themes/yilia/_config.yml","hash":"22e3079c1fb3aaad575cb86875613b3a71f36f15","modified":1527942370355},{"_id":"themes/yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1524873106042},{"_id":"themes/yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1524873106075},{"_id":"source/_posts/HelloEveryone.md","hash":"a130093c463d847c135e8b04841e657908939cce","modified":1527942806661},{"_id":"source/_posts/NEC协议红外接收之stm8s103f3p6.md","hash":"faff0452c96500aea2c067f060d285f214387b76","modified":1527940373736},{"_id":"source/_posts/[FSM]状态机实践入门.md","hash":"e4a4f15d2d2089121efa7ae655b98571ecc6a053","modified":1527940036196},{"_id":"source/_posts/stm8s之NEC协议红外发射.md","hash":"a906ecc65e282b4efaaf0e8d8984596d99d6b6d3","modified":1527940373733},{"_id":"source/_posts/c语言define用法.md","hash":"de2847b7328c05e44f66602bc3e7738617bdbff7","modified":1527938577712},{"_id":"source/_posts/stm8矩阵键盘扫描程序.md","hash":"c33d6924654459e0caab849596a7d1bea01537ad","modified":1527940373730},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1524873105996},{"_id":"themes/yilia/.git/config","hash":"316bc92d9936dc739c39161838a28fb4641cbea2","modified":1524873106001},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1524873091942},{"_id":"themes/yilia/.git/index","hash":"2e24f3f83d1e6d787e9a01d6bebe87151a08e603","modified":1524873106076},{"_id":"themes/yilia/.git/packed-refs","hash":"76b1aa9479dd3de329935b6d94a6624c5f716d23","modified":1524873105992},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1524873106017},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1524873106018},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1524873106018},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1524873106019},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1524873106019},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1524873106020},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1524873106020},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1524873106036},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1524873106036},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1524873106038},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1524873106039},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1524873106040},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1524873106041},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1524873106042},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"a30b82fda6899f2a4bb563ba6478cf47a7ff37d0","modified":1525225338636},{"_id":"themes/yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1524873106075},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1524873106043},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1524873106067},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1524873106034},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"283ae27ea37ac3e0e45b2e05c2482a4c594b9c25","modified":1524873106073},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"1801ef448909ea23c0a48e9d63b80d0cfd5534ce","modified":1524873106074},{"_id":"source/assets/img/HeadShow.jpg","hash":"f031aff93f7341f7ade152a74f990059a3a07c06","modified":1527942761287},{"_id":"source/assets/img/favicon.ico","hash":"38552d515a6aa3b9db54f1717e0016db489156d4","modified":1527942852142},{"_id":"source/assets/img/wechat.png","hash":"b9f90845d6797c51033ddbd774d78fd028ffaefb","modified":1525224085439},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1524873091943},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1524873091944},{"_id":"themes/yilia/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1524873091949},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1524873091949},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1524873091950},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1524873091950},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1524873091951},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1524873091951},{"_id":"themes/yilia/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1524873091952},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1524873091952},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1524873091953},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1524873091954},{"_id":"themes/yilia/.git/logs/HEAD","hash":"0cba80834dd81628d8c661e31d4a8ab8fec41631","modified":1524873105998},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1524873106021},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1524873106022},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1524873106023},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"578fd6511ea14bed37ed909c76264b707ae6dc19","modified":1525225591993},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1524873106024},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1524873106024},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1524873106025},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"6f02a4da518ca086735396256efad8976cfbcba4","modified":1525241691887},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1524873106025},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1524873106026},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1524873106026},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"fb1b8457b9eb15b55da1bf7b133e12c375dd26f8","modified":1524873106027},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1524873106027},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1524873106028},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1524873106035},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1524873106035},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1524873106068},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1524873106068},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1524873106069},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1524873106069},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1524873106070},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1524873106070},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1524873106071},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1524873106071},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1524873106072},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1524873106044},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1524873106045},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1524873106046},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1524873106047},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1524873106045},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1524873106047},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1524873106048},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1524873106048},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1524873106049},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1524873106052},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1524873106054},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1524873106055},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1524873106055},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1524873106055},{"_id":"themes/yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1524873106057},{"_id":"themes/yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1524873106057},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1524873106058},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1524873106058},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1524873106058},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1524873106059},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1524873106059},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1524873106059},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1524873106060},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1524873106060},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1524873106061},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1524873106061},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1524873106061},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1524873106063},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1524873106063},{"_id":"themes/yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1524873106063},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1524873106063},{"_id":"themes/yilia/source-src/js/fix.js","hash":"67b8819abb886c9d066fb3b0624ca15e06f63fe0","modified":1524873106064},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1524873106065},{"_id":"themes/yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1524873106064},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1524873106065},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1524873106066},{"_id":"themes/yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1524873106066},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1524873106066},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"c699cf3c89409ec8f044258e0715a470861b5d5d","modified":1524873106067},{"_id":"source/assets/img/alipay.jpg","hash":"17cfaddbf13926075cde7dc28f8c9c635d91a219","modified":1525224039963},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"e98ec0b3b56f14d1d79af99ceb42727719a584f3","modified":1524873106034},{"_id":"themes/yilia/.git/objects/pack/pack-fed175727564a00105752e69091b2802e50a4378.idx","hash":"38846b42fab9b4416f3469f9bbb65c7023452783","modified":1524873105935},{"_id":"themes/yilia/.git/refs/heads/master","hash":"4ed77da1a2617db0e77c3e3e190a1c79c16dfb9a","modified":1524873105998},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1524873106029},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1524873106028},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1524873106029},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1524873106030},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1524873106030},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1524873106030},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"345b262e3c3b75c0cd9a93d9ecabcf06e33e54ff","modified":1524873106031},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1524873106032},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1524873106032},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1524873106032},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1524873106049},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1524873106050},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1524873106051},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1524873106051},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1524873106053},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1524873106053},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1524873106054},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1524873106054},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1524873106050},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1524873106056},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1524873106056},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1524873106057},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"0cba80834dd81628d8c661e31d4a8ab8fec41631","modified":1524873105999},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1524873105995},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"0cba80834dd81628d8c661e31d4a8ab8fec41631","modified":1524873105995},{"_id":"themes/yilia/.git/objects/pack/pack-fed175727564a00105752e69091b2802e50a4378.pack","hash":"f824a2b4b53fe07a19661acf33fa15a4c9867fa0","modified":1524873105943}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"NEC协议红外接收之stm8s103f3p6","date":"2017-08-10T04:55:22.000Z","toc":false,"_content":"单片机采用stm8s103f3p6,引脚接至 PB4。\n<!-- more -->\n```\n#include “stm8s.h”\n#include “delay.h”\n/* Private defines ———————————————————–*/\n/* Private function prototypes ———————————————–*/\n/* Private functions ———————————————————*/\n/*\n*********************************************************************************************************\n*\n* 模块名称 : 红外遥控解码\n*\n引导码 地址第一位 地址第二位 数据码 数据反码\n字符”S”=0x53 字符”Z”=0x5A\n\\ 9+4.5ms \\ c0-c07 \\ c0-c07 \\ c0-c07 \\ c0-c07 \\\n*********************************************************************************************************\n*/\n\n#define REMOTE_ID 1     //红外遥控识别码(ID)\n\nu8  Ir_Status=0;              //红外接收处理状态\nu8  Ir_Receive_Count=0;       //红外接收数据位计数\nu32 Ir_Receive_Data=0;        //32位的红外接收数据\nu8  Ir_receive_ok=0;          //红外接收完成标志\n\n/*\n********************************************************************************\n定时器初始化\n********************************************************************************\n*/\n\nvoid TIM2_Config(void)\n{\n  TIM2_DeInit();\n  TIM2_TimeBaseInit(TIM2_PRESCALER_16, 50000);//定时器设置1M的计数频率，1US的分辨率 ,计时50ms\n  TIM2_ClearFlag(TIM2_FLAG_UPDATE);\n  TIM2_ITConfig(TIM2_IT_UPDATE, DISABLE);//关闭更新中断，只调用查询函数。\n  TIM2_Cmd(ENABLE);\n}\n/*\n********************************************************************************\n外部中断初始化\n********************************************************************************\n*/\n\nvoid EXTIB_Config(void)\n{\n  disableInterrupts();\n  EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOB, EXTI_SENSITIVITY_FALL_ONLY);//下降沿中断\n  enableInterrupts();\n}\n\n/*\n********************************************************************************\n红外解码初始化函数\n********************************************************************************\n*/\nvoid Ir_Init(void)\n{\n  GPIO_Init(RED_RECEIVE_PORT, GPIO_MODE_IN_PU_IT);   //红外端口PB4初始化\n  EXTIB_Config();\n  TIM2_Config();\n}\n\n/*\n********************************************************************************\n红外接收数据处理函数\n********************************************************************************\n*/\n\nu8 Ir_Process(void)\n{\n  u8 Ir_num=0;                  //最终处理后的键值返回值\n  u8 Address_H,Address_L;       //地址码,地址反码\n  u8 Data_H,Data_L;             //数据码,数据反码\n  \n  if(Ir_receive_ok==1)          //接收完成\n  {\n    Address_H=Ir_Receive_Data>>24;                //得到地址码第一位\n    Address_L=(Ir_Receive_Data>>16)&0xff;         //得到地址码第二位 \n    if((Address_H==0x53)&&(Address_L==0x5A))\n    //检验遥控识别码(地址一Address_H = 'S'即0x53,地址二Address_L = 'Z') \n    { \n      Data_H=Ir_Receive_Data>>8;              //得到数据码\n      Data_L=Ir_Receive_Data;                 //得到数据反码\n      if(Data_H==(u8)~Data_L)                 //接收数据码正确\n      {\n        Ir_num=Data_H;                      //正确键值\n        \n      }\n    }    \n  }\n  return  Ir_num;      //返回键值\n}\n/*\n********************************************************************************\n红外接收中断处理函数\n********************************************************************************\n*/\n\nvoid Ir_Receive_Handle(void)\n{\n  u16 Interval_tim=0;//两个下降沿间隔时间 \n  switch(Ir_Status)\n  {\n  case 0://第一个下降沿，定时器开始计数                    \n    Ir_Status=1;\n \n    TIM2_SetCounter(0);                 //定时器计数值清零\n    break;\n    \n  case 1://第二个下降沿，定时器关闭，读取定时器计数值                                              \n    \n\n    Interval_tim=TIM2_GetCounter();     //读取定时器计数值\n    TIM2_SetCounter(0);                 //定时器计数值清零\n\n  \n    if( (Interval_tim>=12500)&&(Interval_tim<=14500) )//判断引导码是否正确9+4.5ms { Ir_Status=2; //进入下一状态 } else //引导码错误，从新接收 { Ir_Status=0; Ir_Receive_Count=0; } break; case 2://开始32位数据的接收 Interval_tim=TIM2_GetCounter(); if( (Interval_tim>=1000)&&(Interval_tim<=1300) ) //间隔1.12ms ->0\n    {\n      Ir_Receive_Data=Ir_Receive_Data<<1; Ir_Receive_Count++; } else if( (Interval_tim>=2000)&&(Interval_tim<=2600) ) //间隔2.25ms ->1\n    {\n      Ir_Receive_Data=Ir_Receive_Data<<1;\n      Ir_Receive_Data=Ir_Receive_Data|0x0001;\n      Ir_Receive_Count++;\n      \n    }\n    else//不是0,1 接收错误，从新接收\n    {\n      Ir_Status=0;\n      Ir_Receive_Data=0;\n      Ir_Receive_Count=0;\n    }\n    \n    //超出接收数据位数，接收下一个\n    while(Ir_Receive_Count==32)\n    {         \n      Ir_receive_ok=1;//红外接收完成\n      Ir_Status=0;\n      Ir_Receive_Count=0;\n      enableInterrupts();//接收完成，打开中断，避免在接收过程中受其他中断影响。\n      break;\n    } \n    \n    \n    TIM2_SetCounter(0);//从零开始计数\n    \n    break;\n    \n  default :\n    TIM2_SetCounter(0);//从零开始计数\n    break;\n  }\n}\n/*\n********************************************************************************\n********************************************************************************\n*/\n\n//当红外接收到信号进入中断，运行定时器执行程序，红外未收到信号空闲时无中断定时器关闭\n\nvoid main(void)\n{ \n  CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);\n  CLK_HSICmd(ENABLE);\n  \n  uint8_t key_val;\n  Ir_Init();\n  \n  u8 test_val=(0x53&0x4F&0x5A&0x4f&0x53);\n  if(test_val){}\n  \n  while(1)  \n  {\n    if( Ir_receive_ok == 1 ) //一帧红外数据接收完成 \n    {\n      key_val = Ir_Process();\n      Ir_receive_ok=0;\n      \n      //不同的遥控器面板对应不同的键值 0-9\n      switch( key_val )\n      {                                                \n      }\n      Ir_Receive_Data=0;//清空接收数据\n    }\n    \n  } \n}\n\n/*****************************/\nINTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)\n{\n  /* In order to detect unexpected events during development,\n  it is recommended to set a breakpoint on the following instruction.\n  */\n  \n  disableInterrupts();\n  Ir_Receive_Handle(); \n  \n}\n```","source":"_posts/NEC协议红外接收之stm8s103f3p6.md","raw":"---\ntitle: \"NEC协议红外接收之stm8s103f3p6\"\ndate: 2017-08-10 12:55:22\ntoc: false\ntags: [单片机,stm8]\n---\n单片机采用stm8s103f3p6,引脚接至 PB4。\n<!-- more -->\n```\n#include “stm8s.h”\n#include “delay.h”\n/* Private defines ———————————————————–*/\n/* Private function prototypes ———————————————–*/\n/* Private functions ———————————————————*/\n/*\n*********************************************************************************************************\n*\n* 模块名称 : 红外遥控解码\n*\n引导码 地址第一位 地址第二位 数据码 数据反码\n字符”S”=0x53 字符”Z”=0x5A\n\\ 9+4.5ms \\ c0-c07 \\ c0-c07 \\ c0-c07 \\ c0-c07 \\\n*********************************************************************************************************\n*/\n\n#define REMOTE_ID 1     //红外遥控识别码(ID)\n\nu8  Ir_Status=0;              //红外接收处理状态\nu8  Ir_Receive_Count=0;       //红外接收数据位计数\nu32 Ir_Receive_Data=0;        //32位的红外接收数据\nu8  Ir_receive_ok=0;          //红外接收完成标志\n\n/*\n********************************************************************************\n定时器初始化\n********************************************************************************\n*/\n\nvoid TIM2_Config(void)\n{\n  TIM2_DeInit();\n  TIM2_TimeBaseInit(TIM2_PRESCALER_16, 50000);//定时器设置1M的计数频率，1US的分辨率 ,计时50ms\n  TIM2_ClearFlag(TIM2_FLAG_UPDATE);\n  TIM2_ITConfig(TIM2_IT_UPDATE, DISABLE);//关闭更新中断，只调用查询函数。\n  TIM2_Cmd(ENABLE);\n}\n/*\n********************************************************************************\n外部中断初始化\n********************************************************************************\n*/\n\nvoid EXTIB_Config(void)\n{\n  disableInterrupts();\n  EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOB, EXTI_SENSITIVITY_FALL_ONLY);//下降沿中断\n  enableInterrupts();\n}\n\n/*\n********************************************************************************\n红外解码初始化函数\n********************************************************************************\n*/\nvoid Ir_Init(void)\n{\n  GPIO_Init(RED_RECEIVE_PORT, GPIO_MODE_IN_PU_IT);   //红外端口PB4初始化\n  EXTIB_Config();\n  TIM2_Config();\n}\n\n/*\n********************************************************************************\n红外接收数据处理函数\n********************************************************************************\n*/\n\nu8 Ir_Process(void)\n{\n  u8 Ir_num=0;                  //最终处理后的键值返回值\n  u8 Address_H,Address_L;       //地址码,地址反码\n  u8 Data_H,Data_L;             //数据码,数据反码\n  \n  if(Ir_receive_ok==1)          //接收完成\n  {\n    Address_H=Ir_Receive_Data>>24;                //得到地址码第一位\n    Address_L=(Ir_Receive_Data>>16)&0xff;         //得到地址码第二位 \n    if((Address_H==0x53)&&(Address_L==0x5A))\n    //检验遥控识别码(地址一Address_H = 'S'即0x53,地址二Address_L = 'Z') \n    { \n      Data_H=Ir_Receive_Data>>8;              //得到数据码\n      Data_L=Ir_Receive_Data;                 //得到数据反码\n      if(Data_H==(u8)~Data_L)                 //接收数据码正确\n      {\n        Ir_num=Data_H;                      //正确键值\n        \n      }\n    }    \n  }\n  return  Ir_num;      //返回键值\n}\n/*\n********************************************************************************\n红外接收中断处理函数\n********************************************************************************\n*/\n\nvoid Ir_Receive_Handle(void)\n{\n  u16 Interval_tim=0;//两个下降沿间隔时间 \n  switch(Ir_Status)\n  {\n  case 0://第一个下降沿，定时器开始计数                    \n    Ir_Status=1;\n \n    TIM2_SetCounter(0);                 //定时器计数值清零\n    break;\n    \n  case 1://第二个下降沿，定时器关闭，读取定时器计数值                                              \n    \n\n    Interval_tim=TIM2_GetCounter();     //读取定时器计数值\n    TIM2_SetCounter(0);                 //定时器计数值清零\n\n  \n    if( (Interval_tim>=12500)&&(Interval_tim<=14500) )//判断引导码是否正确9+4.5ms { Ir_Status=2; //进入下一状态 } else //引导码错误，从新接收 { Ir_Status=0; Ir_Receive_Count=0; } break; case 2://开始32位数据的接收 Interval_tim=TIM2_GetCounter(); if( (Interval_tim>=1000)&&(Interval_tim<=1300) ) //间隔1.12ms ->0\n    {\n      Ir_Receive_Data=Ir_Receive_Data<<1; Ir_Receive_Count++; } else if( (Interval_tim>=2000)&&(Interval_tim<=2600) ) //间隔2.25ms ->1\n    {\n      Ir_Receive_Data=Ir_Receive_Data<<1;\n      Ir_Receive_Data=Ir_Receive_Data|0x0001;\n      Ir_Receive_Count++;\n      \n    }\n    else//不是0,1 接收错误，从新接收\n    {\n      Ir_Status=0;\n      Ir_Receive_Data=0;\n      Ir_Receive_Count=0;\n    }\n    \n    //超出接收数据位数，接收下一个\n    while(Ir_Receive_Count==32)\n    {         \n      Ir_receive_ok=1;//红外接收完成\n      Ir_Status=0;\n      Ir_Receive_Count=0;\n      enableInterrupts();//接收完成，打开中断，避免在接收过程中受其他中断影响。\n      break;\n    } \n    \n    \n    TIM2_SetCounter(0);//从零开始计数\n    \n    break;\n    \n  default :\n    TIM2_SetCounter(0);//从零开始计数\n    break;\n  }\n}\n/*\n********************************************************************************\n********************************************************************************\n*/\n\n//当红外接收到信号进入中断，运行定时器执行程序，红外未收到信号空闲时无中断定时器关闭\n\nvoid main(void)\n{ \n  CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);\n  CLK_HSICmd(ENABLE);\n  \n  uint8_t key_val;\n  Ir_Init();\n  \n  u8 test_val=(0x53&0x4F&0x5A&0x4f&0x53);\n  if(test_val){}\n  \n  while(1)  \n  {\n    if( Ir_receive_ok == 1 ) //一帧红外数据接收完成 \n    {\n      key_val = Ir_Process();\n      Ir_receive_ok=0;\n      \n      //不同的遥控器面板对应不同的键值 0-9\n      switch( key_val )\n      {                                                \n      }\n      Ir_Receive_Data=0;//清空接收数据\n    }\n    \n  } \n}\n\n/*****************************/\nINTERRUPT_HANDLER(EXTI_PORTB_IRQHandler, 4)\n{\n  /* In order to detect unexpected events during development,\n  it is recommended to set a breakpoint on the following instruction.\n  */\n  \n  disableInterrupts();\n  Ir_Receive_Handle(); \n  \n}\n```","slug":"NEC协议红外接收之stm8s103f3p6","published":1,"updated":"2018-06-02T11:52:53.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhxdzsmd0000d4tw08ydjuf9","content":"<p>单片机采用stm8s103f3p6,引脚接至 PB4。<br><a id=\"more\"></a><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">#include “stm8s.h”</span></span><br><span class=\"line\"><span class=\"section\">#include “delay.h”</span></span><br><span class=\"line\">/<span class=\"bullet\">* Private defines ———————————————————–*</span>/</span><br><span class=\"line\">/<span class=\"bullet\">* Private function prototypes ———————————————–*</span>/</span><br><span class=\"line\">/<span class=\"bullet\">* Private functions ———————————————————*</span>/</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*</span><br><span class=\"line\"><span class=\"bullet\">* </span>模块名称 : 红外遥控解码</span><br><span class=\"line\">*</span><br><span class=\"line\">引导码 地址第一位 地址第二位 数据码 数据反码</span><br><span class=\"line\">字符”S”=0x53 字符”Z”=0x5A</span><br><span class=\"line\">\\ 9+4.5ms \\ c0-c07 \\ c0-c07 \\ c0-c07 \\ c0-c07 \\</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#define REMOTE_ID 1     //红外遥控识别码(ID)</span></span><br><span class=\"line\"></span><br><span class=\"line\">u8  Ir_Status=0;              //红外接收处理状态</span><br><span class=\"line\">u8  Ir<span class=\"emphasis\">_Receive_</span>Count=0;       //红外接收数据位计数</span><br><span class=\"line\">u32 Ir<span class=\"emphasis\">_Receive_</span>Data=0;        //32位的红外接收数据</span><br><span class=\"line\">u8  Ir<span class=\"emphasis\">_receive_</span>ok=0;          //红外接收完成标志</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">定时器初始化</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void TIM2_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  TIM2_DeInit();</span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_TimeBaseInit(TIM2_</span>PRESCALER_16, 50000);//定时器设置1M的计数频率，1US的分辨率 ,计时50ms</span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_ClearFlag(TIM2_</span>FLAG_UPDATE);</span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_ITConfig(TIM2_</span>IT_UPDATE, DISABLE);//关闭更新中断，只调用查询函数。</span><br><span class=\"line\">  TIM2_Cmd(ENABLE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">外部中断初始化</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void EXTIB_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  disableInterrupts();</span><br><span class=\"line\">  EXTI<span class=\"emphasis\">_SetExtIntSensitivity(EXTI_</span>PORT<span class=\"emphasis\">_GPIOB, EXTI_</span>SENSITIVITY<span class=\"emphasis\">_FALL_</span>ONLY);//下降沿中断</span><br><span class=\"line\">  enableInterrupts();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">红外解码初始化函数</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\">void Ir_Init(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  GPIO<span class=\"emphasis\">_Init(RED_</span>RECEIVE<span class=\"emphasis\">_PORT, GPIO_</span>MODE<span class=\"emphasis\">_IN_</span>PU_IT);   //红外端口PB4初始化</span><br><span class=\"line\">  EXTIB_Config();</span><br><span class=\"line\">  TIM2_Config();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">红外接收数据处理函数</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">u8 Ir_Process(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  u8 Ir_num=0;                  //最终处理后的键值返回值</span><br><span class=\"line\">  u8 Address<span class=\"emphasis\">_H,Address_</span>L;       //地址码,地址反码</span><br><span class=\"line\">  u8 Data<span class=\"emphasis\">_H,Data_</span>L;             //数据码,数据反码</span><br><span class=\"line\">  </span><br><span class=\"line\">  if(Ir<span class=\"emphasis\">_receive_</span>ok==1)          //接收完成</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"code\">    Address_H=Ir_Receive_Data&gt;&gt;24;                //得到地址码第一位</span></span><br><span class=\"line\"><span class=\"code\">    Address_L=(Ir_Receive_Data&gt;&gt;16)&amp;0xff;         //得到地址码第二位 </span></span><br><span class=\"line\"><span class=\"code\">    if((Address_H==0x53)&amp;&amp;(Address_L==0x5A))</span></span><br><span class=\"line\"><span class=\"code\">    //检验遥控识别码(地址一Address_H = 'S'即0x53,地址二Address_L = 'Z') </span></span><br><span class=\"line\"><span class=\"code\">    &#123; </span></span><br><span class=\"line\"><span class=\"code\">      Data_H=Ir_Receive_Data&gt;&gt;8;              //得到数据码</span></span><br><span class=\"line\"><span class=\"code\">      Data_L=Ir_Receive_Data;                 //得到数据反码</span></span><br><span class=\"line\"><span class=\"code\">      if(Data_H==(u8)~Data_L)                 //接收数据码正确</span></span><br><span class=\"line\"><span class=\"code\">      &#123;</span></span><br><span class=\"line\"><span class=\"code\">        Ir_num=Data_H;                      //正确键值</span></span><br><span class=\"line\"><span class=\"code\">        </span></span><br><span class=\"line\"><span class=\"code\">      &#125;</span></span><br><span class=\"line\"><span class=\"code\">    &#125;    </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return  Ir_num;      //返回键值</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">红外接收中断处理函数</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void Ir<span class=\"emphasis\">_Receive_</span>Handle(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  u16 Interval_tim=0;//两个下降沿间隔时间 </span><br><span class=\"line\">  switch(Ir_Status)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  case 0://第一个下降沿，定时器开始计数                    </span><br><span class=\"line\"><span class=\"code\">    Ir_Status=1;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);                 //定时器计数值清零</span></span><br><span class=\"line\"><span class=\"code\">    break;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\">  case 1://第二个下降沿，定时器关闭，读取定时器计数值                                              </span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">    Interval_tim=TIM2_GetCounter();     //读取定时器计数值</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);                 //定时器计数值清零</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"code\">    if( (Interval_tim&gt;=12500)&amp;&amp;(Interval_tim&lt;=14500) )//判断引导码是否正确9+4.5ms &#123; Ir_Status=2; //进入下一状态 &#125; else //引导码错误，从新接收 &#123; Ir_Status=0; Ir_Receive_Count=0; &#125; break; case 2://开始32位数据的接收 Interval_tim=TIM2_GetCounter(); if( (Interval_tim&gt;=1000)&amp;&amp;(Interval_tim&lt;=1300) ) //间隔1.12ms -&gt;0</span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=Ir_Receive_Data&lt;&lt;1; Ir_Receive_Count++; &#125; else if( (Interval_tim&gt;=2000)&amp;&amp;(Interval_tim&lt;=2600) ) //间隔2.25ms -&gt;1</span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=Ir_Receive_Data&lt;&lt;1;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=Ir_Receive_Data|0x0001;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Count++;</span></span><br><span class=\"line\"><span class=\"code\">      </span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    else//不是0,1 接收错误，从新接收</span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Status=0;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=0;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Count=0;</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    //超出接收数据位数，接收下一个</span></span><br><span class=\"line\"><span class=\"code\">    while(Ir_Receive_Count==32)</span></span><br><span class=\"line\"><span class=\"code\">    &#123;         </span></span><br><span class=\"line\"><span class=\"code\">      Ir_receive_ok=1;//红外接收完成</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Status=0;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Count=0;</span></span><br><span class=\"line\"><span class=\"code\">      enableInterrupts();//接收完成，打开中断，避免在接收过程中受其他中断影响。</span></span><br><span class=\"line\"><span class=\"code\">      break;</span></span><br><span class=\"line\"><span class=\"code\">    &#125; </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);//从零开始计数</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    break;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\">  default :</span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);//从零开始计数</span></span><br><span class=\"line\"><span class=\"code\">    break;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">//当红外接收到信号进入中断，运行定时器执行程序，红外未收到信号空闲时无中断定时器关闭</span><br><span class=\"line\"></span><br><span class=\"line\">void main(void)</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  CLK<span class=\"emphasis\">_HSIPrescalerConfig(CLK_</span>PRESCALER_HSIDIV1);</span><br><span class=\"line\">  CLK_HSICmd(ENABLE);</span><br><span class=\"line\">  </span><br><span class=\"line\">  uint8<span class=\"emphasis\">_t key_</span>val;</span><br><span class=\"line\">  Ir_Init();</span><br><span class=\"line\">  </span><br><span class=\"line\">  u8 test_val=(0x53&amp;0x4F&amp;0x5A&amp;0x4f&amp;0x53);</span><br><span class=\"line\">  if(test_val)&#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  while(1)  </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"code\">    if( Ir_receive_ok == 1 ) //一帧红外数据接收完成 </span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      key_val = Ir_Process();</span></span><br><span class=\"line\"><span class=\"code\">      Ir_receive_ok=0;</span></span><br><span class=\"line\"><span class=\"code\">      </span></span><br><span class=\"line\"><span class=\"code\">      //不同的遥控器面板对应不同的键值 0-9</span></span><br><span class=\"line\"><span class=\"code\">      switch( key_val )</span></span><br><span class=\"line\"><span class=\"code\">      &#123;                                                </span></span><br><span class=\"line\"><span class=\"code\">      &#125;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=0;//清空接收数据</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>*/</span><br><span class=\"line\">INTERRUPT<span class=\"emphasis\">_HANDLER(EXTI_</span>PORTB_IRQHandler, 4)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  /* In order to detect unexpected events during development,</span><br><span class=\"line\">  it is recommended to set a breakpoint on the following instruction.</span><br><span class=\"line\">  */</span><br><span class=\"line\">  </span><br><span class=\"line\">  disableInterrupts();</span><br><span class=\"line\">  Ir<span class=\"emphasis\">_Receive_</span>Handle(); </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>单片机采用stm8s103f3p6,引脚接至 PB4。<br>","more":"<br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">#include “stm8s.h”</span></span><br><span class=\"line\"><span class=\"section\">#include “delay.h”</span></span><br><span class=\"line\">/<span class=\"bullet\">* Private defines ———————————————————–*</span>/</span><br><span class=\"line\">/<span class=\"bullet\">* Private function prototypes ———————————————–*</span>/</span><br><span class=\"line\">/<span class=\"bullet\">* Private functions ———————————————————*</span>/</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*</span><br><span class=\"line\"><span class=\"bullet\">* </span>模块名称 : 红外遥控解码</span><br><span class=\"line\">*</span><br><span class=\"line\">引导码 地址第一位 地址第二位 数据码 数据反码</span><br><span class=\"line\">字符”S”=0x53 字符”Z”=0x5A</span><br><span class=\"line\">\\ 9+4.5ms \\ c0-c07 \\ c0-c07 \\ c0-c07 \\ c0-c07 \\</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#define REMOTE_ID 1     //红外遥控识别码(ID)</span></span><br><span class=\"line\"></span><br><span class=\"line\">u8  Ir_Status=0;              //红外接收处理状态</span><br><span class=\"line\">u8  Ir<span class=\"emphasis\">_Receive_</span>Count=0;       //红外接收数据位计数</span><br><span class=\"line\">u32 Ir<span class=\"emphasis\">_Receive_</span>Data=0;        //32位的红外接收数据</span><br><span class=\"line\">u8  Ir<span class=\"emphasis\">_receive_</span>ok=0;          //红外接收完成标志</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">定时器初始化</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void TIM2_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  TIM2_DeInit();</span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_TimeBaseInit(TIM2_</span>PRESCALER_16, 50000);//定时器设置1M的计数频率，1US的分辨率 ,计时50ms</span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_ClearFlag(TIM2_</span>FLAG_UPDATE);</span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_ITConfig(TIM2_</span>IT_UPDATE, DISABLE);//关闭更新中断，只调用查询函数。</span><br><span class=\"line\">  TIM2_Cmd(ENABLE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">外部中断初始化</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void EXTIB_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  disableInterrupts();</span><br><span class=\"line\">  EXTI<span class=\"emphasis\">_SetExtIntSensitivity(EXTI_</span>PORT<span class=\"emphasis\">_GPIOB, EXTI_</span>SENSITIVITY<span class=\"emphasis\">_FALL_</span>ONLY);//下降沿中断</span><br><span class=\"line\">  enableInterrupts();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">红外解码初始化函数</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\">void Ir_Init(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  GPIO<span class=\"emphasis\">_Init(RED_</span>RECEIVE<span class=\"emphasis\">_PORT, GPIO_</span>MODE<span class=\"emphasis\">_IN_</span>PU_IT);   //红外端口PB4初始化</span><br><span class=\"line\">  EXTIB_Config();</span><br><span class=\"line\">  TIM2_Config();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">红外接收数据处理函数</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">u8 Ir_Process(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  u8 Ir_num=0;                  //最终处理后的键值返回值</span><br><span class=\"line\">  u8 Address<span class=\"emphasis\">_H,Address_</span>L;       //地址码,地址反码</span><br><span class=\"line\">  u8 Data<span class=\"emphasis\">_H,Data_</span>L;             //数据码,数据反码</span><br><span class=\"line\">  </span><br><span class=\"line\">  if(Ir<span class=\"emphasis\">_receive_</span>ok==1)          //接收完成</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"code\">    Address_H=Ir_Receive_Data&gt;&gt;24;                //得到地址码第一位</span></span><br><span class=\"line\"><span class=\"code\">    Address_L=(Ir_Receive_Data&gt;&gt;16)&amp;0xff;         //得到地址码第二位 </span></span><br><span class=\"line\"><span class=\"code\">    if((Address_H==0x53)&amp;&amp;(Address_L==0x5A))</span></span><br><span class=\"line\"><span class=\"code\">    //检验遥控识别码(地址一Address_H = 'S'即0x53,地址二Address_L = 'Z') </span></span><br><span class=\"line\"><span class=\"code\">    &#123; </span></span><br><span class=\"line\"><span class=\"code\">      Data_H=Ir_Receive_Data&gt;&gt;8;              //得到数据码</span></span><br><span class=\"line\"><span class=\"code\">      Data_L=Ir_Receive_Data;                 //得到数据反码</span></span><br><span class=\"line\"><span class=\"code\">      if(Data_H==(u8)~Data_L)                 //接收数据码正确</span></span><br><span class=\"line\"><span class=\"code\">      &#123;</span></span><br><span class=\"line\"><span class=\"code\">        Ir_num=Data_H;                      //正确键值</span></span><br><span class=\"line\"><span class=\"code\">        </span></span><br><span class=\"line\"><span class=\"code\">      &#125;</span></span><br><span class=\"line\"><span class=\"code\">    &#125;    </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return  Ir_num;      //返回键值</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">红外接收中断处理函数</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void Ir<span class=\"emphasis\">_Receive_</span>Handle(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  u16 Interval_tim=0;//两个下降沿间隔时间 </span><br><span class=\"line\">  switch(Ir_Status)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  case 0://第一个下降沿，定时器开始计数                    </span><br><span class=\"line\"><span class=\"code\">    Ir_Status=1;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);                 //定时器计数值清零</span></span><br><span class=\"line\"><span class=\"code\">    break;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\">  case 1://第二个下降沿，定时器关闭，读取定时器计数值                                              </span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">    Interval_tim=TIM2_GetCounter();     //读取定时器计数值</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);                 //定时器计数值清零</span></span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"code\">    if( (Interval_tim&gt;=12500)&amp;&amp;(Interval_tim&lt;=14500) )//判断引导码是否正确9+4.5ms &#123; Ir_Status=2; //进入下一状态 &#125; else //引导码错误，从新接收 &#123; Ir_Status=0; Ir_Receive_Count=0; &#125; break; case 2://开始32位数据的接收 Interval_tim=TIM2_GetCounter(); if( (Interval_tim&gt;=1000)&amp;&amp;(Interval_tim&lt;=1300) ) //间隔1.12ms -&gt;0</span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=Ir_Receive_Data&lt;&lt;1; Ir_Receive_Count++; &#125; else if( (Interval_tim&gt;=2000)&amp;&amp;(Interval_tim&lt;=2600) ) //间隔2.25ms -&gt;1</span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=Ir_Receive_Data&lt;&lt;1;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=Ir_Receive_Data|0x0001;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Count++;</span></span><br><span class=\"line\"><span class=\"code\">      </span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    else//不是0,1 接收错误，从新接收</span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Status=0;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=0;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Count=0;</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    //超出接收数据位数，接收下一个</span></span><br><span class=\"line\"><span class=\"code\">    while(Ir_Receive_Count==32)</span></span><br><span class=\"line\"><span class=\"code\">    &#123;         </span></span><br><span class=\"line\"><span class=\"code\">      Ir_receive_ok=1;//红外接收完成</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Status=0;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Count=0;</span></span><br><span class=\"line\"><span class=\"code\">      enableInterrupts();//接收完成，打开中断，避免在接收过程中受其他中断影响。</span></span><br><span class=\"line\"><span class=\"code\">      break;</span></span><br><span class=\"line\"><span class=\"code\">    &#125; </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);//从零开始计数</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    break;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\">  default :</span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCounter(0);//从零开始计数</span></span><br><span class=\"line\"><span class=\"code\">    break;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">//当红外接收到信号进入中断，运行定时器执行程序，红外未收到信号空闲时无中断定时器关闭</span><br><span class=\"line\"></span><br><span class=\"line\">void main(void)</span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  CLK<span class=\"emphasis\">_HSIPrescalerConfig(CLK_</span>PRESCALER_HSIDIV1);</span><br><span class=\"line\">  CLK_HSICmd(ENABLE);</span><br><span class=\"line\">  </span><br><span class=\"line\">  uint8<span class=\"emphasis\">_t key_</span>val;</span><br><span class=\"line\">  Ir_Init();</span><br><span class=\"line\">  </span><br><span class=\"line\">  u8 test_val=(0x53&amp;0x4F&amp;0x5A&amp;0x4f&amp;0x53);</span><br><span class=\"line\">  if(test_val)&#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  while(1)  </span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"code\">    if( Ir_receive_ok == 1 ) //一帧红外数据接收完成 </span></span><br><span class=\"line\"><span class=\"code\">    &#123;</span></span><br><span class=\"line\"><span class=\"code\">      key_val = Ir_Process();</span></span><br><span class=\"line\"><span class=\"code\">      Ir_receive_ok=0;</span></span><br><span class=\"line\"><span class=\"code\">      </span></span><br><span class=\"line\"><span class=\"code\">      //不同的遥控器面板对应不同的键值 0-9</span></span><br><span class=\"line\"><span class=\"code\">      switch( key_val )</span></span><br><span class=\"line\"><span class=\"code\">      &#123;                                                </span></span><br><span class=\"line\"><span class=\"code\">      &#125;</span></span><br><span class=\"line\"><span class=\"code\">      Ir_Receive_Data=0;//清空接收数据</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>*/</span><br><span class=\"line\">INTERRUPT<span class=\"emphasis\">_HANDLER(EXTI_</span>PORTB_IRQHandler, 4)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  /* In order to detect unexpected events during development,</span><br><span class=\"line\">  it is recommended to set a breakpoint on the following instruction.</span><br><span class=\"line\">  */</span><br><span class=\"line\">  </span><br><span class=\"line\">  disableInterrupts();</span><br><span class=\"line\">  Ir<span class=\"emphasis\">_Receive_</span>Handle(); </span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"HelloEveryone","date":"1899-11-29T16:00:00.000Z","toc":false,"_content":"*这是一个斜体测试*\n\n_这是一个斜体测试_\n\n<!-- more -->\n\n**这是一个粗体测试**\n\n***这是一个加粗斜体测试***\n\n~~这是一个删除线测试~~\n\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n\n##### 五级标题\n\n###### 六级标题\n\n### 超链接测试：\n#### 行内测试：\n[我的博客](https://mx1117.com/)\n\n### 列表测试：\n* 无序列表项1\n+ 无序列表项2\n- 无序列表项3\n\n1.有序列表项1\n2.有序列表项2\n3.有序列表项3\n\n### 插入图片测试\n![](/assets/img/HeadShow.jpg)\n\n\n### 表格测试：\n\n| 表头1|表头2|表头3|表头4\n|-| :- | :-: | -: |\n|默认左对齐|左对齐|居中对其|右对齐|\n|默认左对齐|左对齐|居中对其|右对齐|\n|默认左对齐|左对齐|居中对其|右对齐|\n\n### 代码段测试：\n```\nint main()\n{\n\tint a,b,c;\n\tscanf(\"d%\",a);\n\tprintf(\"这是代码段\");\n\treturn 0;\n}\n```","source":"_posts/HelloEveryone.md","raw":"---\ntitle: \"HelloEveryone\"\ndate: 0000-00-00 00:00:00\ntoc: false\ntags: [hexo]\n---\n*这是一个斜体测试*\n\n_这是一个斜体测试_\n\n<!-- more -->\n\n**这是一个粗体测试**\n\n***这是一个加粗斜体测试***\n\n~~这是一个删除线测试~~\n\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n#### 四级标题\n\n##### 五级标题\n\n###### 六级标题\n\n### 超链接测试：\n#### 行内测试：\n[我的博客](https://mx1117.com/)\n\n### 列表测试：\n* 无序列表项1\n+ 无序列表项2\n- 无序列表项3\n\n1.有序列表项1\n2.有序列表项2\n3.有序列表项3\n\n### 插入图片测试\n![](/assets/img/HeadShow.jpg)\n\n\n### 表格测试：\n\n| 表头1|表头2|表头3|表头4\n|-| :- | :-: | -: |\n|默认左对齐|左对齐|居中对其|右对齐|\n|默认左对齐|左对齐|居中对其|右对齐|\n|默认左对齐|左对齐|居中对其|右对齐|\n\n### 代码段测试：\n```\nint main()\n{\n\tint a,b,c;\n\tscanf(\"d%\",a);\n\tprintf(\"这是代码段\");\n\treturn 0;\n}\n```","slug":"HelloEveryone","published":1,"updated":"2018-06-02T12:33:26.661Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhxdzsmj0001d4twatvu8jt1","content":"<p><em>这是一个斜体测试</em></p>\n<p><em>这是一个斜体测试</em></p>\n<a id=\"more\"></a>\n<p><strong>这是一个粗体测试</strong></p>\n<p><strong><em>这是一个加粗斜体测试</em></strong></p>\n<p><del>这是一个删除线测试</del></p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><h3 id=\"超链接测试：\"><a href=\"#超链接测试：\" class=\"headerlink\" title=\"超链接测试：\"></a>超链接测试：</h3><h4 id=\"行内测试：\"><a href=\"#行内测试：\" class=\"headerlink\" title=\"行内测试：\"></a>行内测试：</h4><p><a href=\"https://mx1117.com/\" target=\"_blank\" rel=\"noopener\">我的博客</a></p>\n<h3 id=\"列表测试：\"><a href=\"#列表测试：\" class=\"headerlink\" title=\"列表测试：\"></a>列表测试：</h3><ul>\n<li>无序列表项1</li>\n</ul>\n<ul>\n<li>无序列表项2</li>\n</ul>\n<ul>\n<li>无序列表项3</li>\n</ul>\n<p>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p>\n<h3 id=\"插入图片测试\"><a href=\"#插入图片测试\" class=\"headerlink\" title=\"插入图片测试\"></a>插入图片测试</h3><p><img src=\"/assets/img/HeadShow.jpg\" alt=\"\"></p>\n<h3 id=\"表格测试：\"><a href=\"#表格测试：\" class=\"headerlink\" title=\"表格测试：\"></a>表格测试：</h3><table>\n<thead>\n<tr>\n<th>表头1</th>\n<th style=\"text-align:left\">表头2</th>\n<th style=\"text-align:center\">表头3</th>\n<th style=\"text-align:right\">表头4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对其</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对其</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对其</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码段测试：\"><a href=\"#代码段测试：\" class=\"headerlink\" title=\"代码段测试：\"></a>代码段测试：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b,c;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"d%\"</span>,a);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"这是代码段\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p><em>这是一个斜体测试</em></p>\n<p><em>这是一个斜体测试</em></p>","more":"<p><strong>这是一个粗体测试</strong></p>\n<p><strong><em>这是一个加粗斜体测试</em></strong></p>\n<p><del>这是一个删除线测试</del></p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><h3 id=\"超链接测试：\"><a href=\"#超链接测试：\" class=\"headerlink\" title=\"超链接测试：\"></a>超链接测试：</h3><h4 id=\"行内测试：\"><a href=\"#行内测试：\" class=\"headerlink\" title=\"行内测试：\"></a>行内测试：</h4><p><a href=\"https://mx1117.com/\" target=\"_blank\" rel=\"noopener\">我的博客</a></p>\n<h3 id=\"列表测试：\"><a href=\"#列表测试：\" class=\"headerlink\" title=\"列表测试：\"></a>列表测试：</h3><ul>\n<li>无序列表项1</li>\n</ul>\n<ul>\n<li>无序列表项2</li>\n</ul>\n<ul>\n<li>无序列表项3</li>\n</ul>\n<p>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p>\n<h3 id=\"插入图片测试\"><a href=\"#插入图片测试\" class=\"headerlink\" title=\"插入图片测试\"></a>插入图片测试</h3><p><img src=\"/assets/img/HeadShow.jpg\" alt=\"\"></p>\n<h3 id=\"表格测试：\"><a href=\"#表格测试：\" class=\"headerlink\" title=\"表格测试：\"></a>表格测试：</h3><table>\n<thead>\n<tr>\n<th>表头1</th>\n<th style=\"text-align:left\">表头2</th>\n<th style=\"text-align:center\">表头3</th>\n<th style=\"text-align:right\">表头4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对其</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对其</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n<tr>\n<td>默认左对齐</td>\n<td style=\"text-align:left\">左对齐</td>\n<td style=\"text-align:center\">居中对其</td>\n<td style=\"text-align:right\">右对齐</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码段测试：\"><a href=\"#代码段测试：\" class=\"headerlink\" title=\"代码段测试：\"></a>代码段测试：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b,c;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"d%\"</span>,a);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"这是代码段\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[FSM]状态机实践入门","date":"2017-07-28T06:25:22.000Z","toc":true,"_content":"转自原链接：https://www.amobbs.com/thread-4585393-1-1.html\n不用怀疑，单片机的万能语言就是状态机。\n<!-- more -->\n还希望大家不要条件反射式的看到状态机就\n以为我要讲什么VHDL的东西——状态机是一种思维模式，是计算机理论的立足之本（不\n相信请参考清华大学出版社的《自动机理论与应用》）——因此状态机的实现与语言本\n身关系并不是绝对的。本文要讨论的状态机，从实现方式上更类似于Java中常用的那种\n思维模式，而与VHDL相去甚远。\n路要一步一步走，饭要一口一口吃，为了不把后来人吓跑，状态机理论中更多复杂的部\n分，我会在以后专门写文章讨论，这里我先找一个切入点，从我常用的2种状态机编写\n方式为大家慢慢展开。\n\n首先，关于几个问题，比如：什么地方用状态机？状态机究竟有几种写法？状态机效率\n到底高不高？是不是把简单问题弄复杂了？这类问题统统不在本文讨论之列，简而言之\n——谁用谁知道。其实，还不能简单的就这么下了结论，套八股文而不求甚解的也大有\n人在————因此我要说：关于状态机的各种问题“谁思考谁实践谁坚持谁知道”。\n\n# 状态机入门第一式：switch case一线到底\n要点：    用switch结构配合一个状态变量，通过修改状态变量的值来切换状态。\n范例：\n```\n//! 定义状态名称与状态值之间的关系，增加可读性\n#define FSM_START                                   0x00\n#define FSM_STATE_A                                 0x01\n#define FSM_STATE_B                                 0x02\n…\n#define FSM_RESET                                   0xFF\nbool fsm_example_A( <</span>形参列表> ) {\nstatic uint8_t s_chFSMState = FSM_START;                      //!< 定义状态变量\n…\nswitch ( s_chFSMState ) {\ncase FSM_START:\n//! 这里添加状态机初始化代码\n…\ns_chFSMState = FSM_STATE_A;                           //!< 进入下一状态\nbreak;\ncase FSM_STATE_A:\n//! 这里添加状态机A进入下一状态的检测代码\nif (<</span>某某条件>) {\n//! 这里做一些进入下一状态时要做的准备工作\ns_chFSMState = FSM_STATE_B;                       //!< 进入下一状态\n}\nbreak;\ncase FSM_STATE_B:\n//! 这里添加状态机A进入下一状态的检测代码\nif (<</span>某某条件>) {\n//! 这里做一些进入下一状态时要做的准备工作\ns_chFSMState = FSM_STATE_A;                   //!< 进入下一状态\n} else if (<</span>某某条件>) {\n} else if (<</span>某某条件>) {\n…\n} else {\n}\nbreak;\n…\ncase FSM_STOP:\ncase FSM_RESET:\ndefault:\n//! 这里添加状态机复位相关的代码\n…\nchFSMState = FSM_START;                                    //!< 状态机复位\n\n//! 返回false表示状态机已经不需要继续运行了\nreturn false;\n}\n\n//! 返回true表示状态机正在运行\nreturn true;\n}\n```\n总结：    从范例可知，这种状态机就是一根筋……并不是说他走不出什么分支来，而\n是说通常他没有办法让多个状态同时处于激活状态。\n\n# 状态机入门第二式：if 判断变化无穷\n要点：     用if else…else if结构的组合来描述状态流程图。\n什么是状态流程图？我不想多解释，因为就那么个简单的东西，说多了反而神秘兮兮的。\n状态流程图你可以简单粗暴的认为，他就是流程图，等你用得多了，你就渐渐明白为啥\n多了“状态”二字；如果你后来或者先前学过状态图，那么很快你就会明白状态流程图\n比状态图“高级”了多少。\n1、 不管怎么说，你可以先为你要处理的事物画一个流程图。如果流程图都不会画，就\n不用凑热闹了。\n2、 接下来，把流程图上每一个方框或者判断筐都“简单粗暴”地看成一个状态。\n3、 将每一个状态用if结构表示出来\nif (<</span>状态标志>) {\n//! 状态代码\n…\n}\n4、 自己看着办，合并多余的状态，优化优化代码。\n范例：\n\n//! 首先将布尔量的状态标志压缩在一个字节里面以节省内存开支\n\n```\ntypedef union {\nuint8_t     Value;\nuint8_t     Byte;\nstruct {\nunsigned BIT0:1;\nunsigned BIT1:1;\nunsigned BIT2:1;\nunsigned BIT3:1;\nunsigned BIT4:1;\nunsigned BIT5:1;\nunsigned BIT6:1;\nunsigned BIT7:1;\n}           Bits;\n}byte_t;\n\n#define FSM_ACTION_FLAG             s_tbState.Bits\n#define FSM_STOP_ALL_ACTIONS()      do {s_tbState.Value = 0;}while(0)\n#define FSM_START                   (0 == s_tbState.Value)\n#define FSM_STATE_A                 FSM_ACTION_FLAG.BIT0\n#define FSM_STATE_B                 FSM_ACTION_FLAG.BIT1\n…\n#define FSM_STATE_H                 FSM_ACTION_FLAG.BIT7\n\nbool fsm_example_B( <</span>形参列表> ) {\nstatic byte_t s_tbState = {0};                               //!< 定义状态变量\n\nif (FSM_START) {                                             //!< 起始状态\n//! 这里放置状态机初始化的代码\n…\nFSM_STATE_A = true;                                       //!< 进入状态B，start装台自动结束\n}\n\nif (FSM_STATE_A) {                                           //!< 一个典型的简单状态\n//! 这里放置状态A的代码或者\n…\n//! 这里放置某些条件以开启别的状态\nif (<</span>某些条件>) {\n//! 这里做一些“进入”下一个状态之前的准备工作\nFSM_STATE_B = true;                                  //!< 开启下一个状态\nFSM_STATE_A = false;                                 //!< 结束当前状态\n}\n}\n\nif (FSM_STATE_B) {                                           //!< 一个典型的监视状态\n…\n//! 这里检测某些条件\nif (<</span>某些条件>) {\n//! 这里做一些“开启”某个状态的准备工作\nFSM_STATE_C = true;                                  //!< 开启某一个状态而不结束当前状态\nFSM_STATE_D = true;                                  //!< 你当然可以一次触发多个状态\n…\n} else if (<</span>某些条件>) {\n//! 满足某些条件以后关闭当前状态\nFSM_STATE_B = false;\n}\n}\n…\nif (FSM_STATE_F) {                                            //!< 一个典型的子状态机调用\nif (!fsm_example_a(<</span>实参列表>)) {                  //!< 等待子状态机返回false\n//!子状态机运行完成，进入下一状态\n…\nFSM_STATE_F = false;                                  //!< 结束当前状态\nFSM_STATE_x = true;                                   //!< 进入下一状态x代表某个字母\n}\n}\n\nif (FSM_STATE_H) {                                            //!< 一个典型的中止状态\n//!< 某些状态机的操作，比如释放某些资源\n…\nFSM_STOP_ALL_ACTIONS();                                   //!< 复位状态机\nreturn false;                                             //!< 返回false表示状态机结束\n}\n\nreturn true;                                                  //!< 返回true表示状态机保持运行\n}\n```\n总结：    从范例可知，这种状态机非常灵活，通过布尔变量的开启和关闭，你可以自\n由的控制某些状态的开启。同一时刻可能有多个状态是激活的。这种结构几乎可以翻译\n任何流程图。具体还有很多好处，可以在使用中体会。\n\n# 状态机入门第三式：状态在心中，无态也变态\n要点：    所有的函数都可以看作是状态机，只不过普通的函数是一个只有单一状态的\n状态机。如果函数有返回值，且这个返回值能表征至少两种以上不同的状态（比如返回\n是一个指针，那么NULL和非NULL就是两种状态；比如返回是一个布尔变量，那么true和\nfalse就是两种状态；比如返回的是一个整数，并且整数的某些特征可以被分类，那么\n这些不同分类就是几种不同的状态），那么这些返回值就可以被用作指示当前状态机的\n运行情况。状态机可以调用子状态机。所有的状态都应该是none-block的，简单说就是\n不会把系统定死在某一个状态里面很久都出不来，比如while(1)或者循环次数较大的for\n结构；否则状态机的存在意义就大打折扣——直接按照流程图写代码不就好了，干吗非\n要翻译成状态机？状态机中，状态的功能应该是等待某一个事件的发生（或者说条件的\n满足）；某些情况下，一些一次性执行完的流程也可以独立成一个状态——它当然没有\n等待任何条件的满足，你可以认为他是无条件进行状态转移的。\n\n总体说来，状态机是一个万能的计算机语言表述方式，与具体的载体语言关系不大。心\n中有状态，代码怎会无状态？状态机是裸机条件下多任务的廉价实现方案。在状态机多\n任务条件下，操作系统牵涉的几乎所有概念都会有所涉及，比如任务的同步，临界区的\n保护，任务间的通讯，任务的优先级，资源的动态分配等等。你可以这么理解，每一个\n状态机都是一个进程，每一个状态都是一个线程，因为进程有自己的资源，而同一个进\n程里面的多个线程是公用同一片资源的。你甚至可以在有抢占式操作系统的情况下用状\n态机，这个时候，操作系统的每一个任务都是个内核，那么整个系统开发就可以登小于\n多核系统开发了。","source":"_posts/[FSM]状态机实践入门.md","raw":"---\ntitle: \"[FSM]状态机实践入门\"\ndate: 2017-07-28 14:25:22\ntoc: true\ntags: [单片机,FSM]\n---\n转自原链接：https://www.amobbs.com/thread-4585393-1-1.html\n不用怀疑，单片机的万能语言就是状态机。\n<!-- more -->\n还希望大家不要条件反射式的看到状态机就\n以为我要讲什么VHDL的东西——状态机是一种思维模式，是计算机理论的立足之本（不\n相信请参考清华大学出版社的《自动机理论与应用》）——因此状态机的实现与语言本\n身关系并不是绝对的。本文要讨论的状态机，从实现方式上更类似于Java中常用的那种\n思维模式，而与VHDL相去甚远。\n路要一步一步走，饭要一口一口吃，为了不把后来人吓跑，状态机理论中更多复杂的部\n分，我会在以后专门写文章讨论，这里我先找一个切入点，从我常用的2种状态机编写\n方式为大家慢慢展开。\n\n首先，关于几个问题，比如：什么地方用状态机？状态机究竟有几种写法？状态机效率\n到底高不高？是不是把简单问题弄复杂了？这类问题统统不在本文讨论之列，简而言之\n——谁用谁知道。其实，还不能简单的就这么下了结论，套八股文而不求甚解的也大有\n人在————因此我要说：关于状态机的各种问题“谁思考谁实践谁坚持谁知道”。\n\n# 状态机入门第一式：switch case一线到底\n要点：    用switch结构配合一个状态变量，通过修改状态变量的值来切换状态。\n范例：\n```\n//! 定义状态名称与状态值之间的关系，增加可读性\n#define FSM_START                                   0x00\n#define FSM_STATE_A                                 0x01\n#define FSM_STATE_B                                 0x02\n…\n#define FSM_RESET                                   0xFF\nbool fsm_example_A( <</span>形参列表> ) {\nstatic uint8_t s_chFSMState = FSM_START;                      //!< 定义状态变量\n…\nswitch ( s_chFSMState ) {\ncase FSM_START:\n//! 这里添加状态机初始化代码\n…\ns_chFSMState = FSM_STATE_A;                           //!< 进入下一状态\nbreak;\ncase FSM_STATE_A:\n//! 这里添加状态机A进入下一状态的检测代码\nif (<</span>某某条件>) {\n//! 这里做一些进入下一状态时要做的准备工作\ns_chFSMState = FSM_STATE_B;                       //!< 进入下一状态\n}\nbreak;\ncase FSM_STATE_B:\n//! 这里添加状态机A进入下一状态的检测代码\nif (<</span>某某条件>) {\n//! 这里做一些进入下一状态时要做的准备工作\ns_chFSMState = FSM_STATE_A;                   //!< 进入下一状态\n} else if (<</span>某某条件>) {\n} else if (<</span>某某条件>) {\n…\n} else {\n}\nbreak;\n…\ncase FSM_STOP:\ncase FSM_RESET:\ndefault:\n//! 这里添加状态机复位相关的代码\n…\nchFSMState = FSM_START;                                    //!< 状态机复位\n\n//! 返回false表示状态机已经不需要继续运行了\nreturn false;\n}\n\n//! 返回true表示状态机正在运行\nreturn true;\n}\n```\n总结：    从范例可知，这种状态机就是一根筋……并不是说他走不出什么分支来，而\n是说通常他没有办法让多个状态同时处于激活状态。\n\n# 状态机入门第二式：if 判断变化无穷\n要点：     用if else…else if结构的组合来描述状态流程图。\n什么是状态流程图？我不想多解释，因为就那么个简单的东西，说多了反而神秘兮兮的。\n状态流程图你可以简单粗暴的认为，他就是流程图，等你用得多了，你就渐渐明白为啥\n多了“状态”二字；如果你后来或者先前学过状态图，那么很快你就会明白状态流程图\n比状态图“高级”了多少。\n1、 不管怎么说，你可以先为你要处理的事物画一个流程图。如果流程图都不会画，就\n不用凑热闹了。\n2、 接下来，把流程图上每一个方框或者判断筐都“简单粗暴”地看成一个状态。\n3、 将每一个状态用if结构表示出来\nif (<</span>状态标志>) {\n//! 状态代码\n…\n}\n4、 自己看着办，合并多余的状态，优化优化代码。\n范例：\n\n//! 首先将布尔量的状态标志压缩在一个字节里面以节省内存开支\n\n```\ntypedef union {\nuint8_t     Value;\nuint8_t     Byte;\nstruct {\nunsigned BIT0:1;\nunsigned BIT1:1;\nunsigned BIT2:1;\nunsigned BIT3:1;\nunsigned BIT4:1;\nunsigned BIT5:1;\nunsigned BIT6:1;\nunsigned BIT7:1;\n}           Bits;\n}byte_t;\n\n#define FSM_ACTION_FLAG             s_tbState.Bits\n#define FSM_STOP_ALL_ACTIONS()      do {s_tbState.Value = 0;}while(0)\n#define FSM_START                   (0 == s_tbState.Value)\n#define FSM_STATE_A                 FSM_ACTION_FLAG.BIT0\n#define FSM_STATE_B                 FSM_ACTION_FLAG.BIT1\n…\n#define FSM_STATE_H                 FSM_ACTION_FLAG.BIT7\n\nbool fsm_example_B( <</span>形参列表> ) {\nstatic byte_t s_tbState = {0};                               //!< 定义状态变量\n\nif (FSM_START) {                                             //!< 起始状态\n//! 这里放置状态机初始化的代码\n…\nFSM_STATE_A = true;                                       //!< 进入状态B，start装台自动结束\n}\n\nif (FSM_STATE_A) {                                           //!< 一个典型的简单状态\n//! 这里放置状态A的代码或者\n…\n//! 这里放置某些条件以开启别的状态\nif (<</span>某些条件>) {\n//! 这里做一些“进入”下一个状态之前的准备工作\nFSM_STATE_B = true;                                  //!< 开启下一个状态\nFSM_STATE_A = false;                                 //!< 结束当前状态\n}\n}\n\nif (FSM_STATE_B) {                                           //!< 一个典型的监视状态\n…\n//! 这里检测某些条件\nif (<</span>某些条件>) {\n//! 这里做一些“开启”某个状态的准备工作\nFSM_STATE_C = true;                                  //!< 开启某一个状态而不结束当前状态\nFSM_STATE_D = true;                                  //!< 你当然可以一次触发多个状态\n…\n} else if (<</span>某些条件>) {\n//! 满足某些条件以后关闭当前状态\nFSM_STATE_B = false;\n}\n}\n…\nif (FSM_STATE_F) {                                            //!< 一个典型的子状态机调用\nif (!fsm_example_a(<</span>实参列表>)) {                  //!< 等待子状态机返回false\n//!子状态机运行完成，进入下一状态\n…\nFSM_STATE_F = false;                                  //!< 结束当前状态\nFSM_STATE_x = true;                                   //!< 进入下一状态x代表某个字母\n}\n}\n\nif (FSM_STATE_H) {                                            //!< 一个典型的中止状态\n//!< 某些状态机的操作，比如释放某些资源\n…\nFSM_STOP_ALL_ACTIONS();                                   //!< 复位状态机\nreturn false;                                             //!< 返回false表示状态机结束\n}\n\nreturn true;                                                  //!< 返回true表示状态机保持运行\n}\n```\n总结：    从范例可知，这种状态机非常灵活，通过布尔变量的开启和关闭，你可以自\n由的控制某些状态的开启。同一时刻可能有多个状态是激活的。这种结构几乎可以翻译\n任何流程图。具体还有很多好处，可以在使用中体会。\n\n# 状态机入门第三式：状态在心中，无态也变态\n要点：    所有的函数都可以看作是状态机，只不过普通的函数是一个只有单一状态的\n状态机。如果函数有返回值，且这个返回值能表征至少两种以上不同的状态（比如返回\n是一个指针，那么NULL和非NULL就是两种状态；比如返回是一个布尔变量，那么true和\nfalse就是两种状态；比如返回的是一个整数，并且整数的某些特征可以被分类，那么\n这些不同分类就是几种不同的状态），那么这些返回值就可以被用作指示当前状态机的\n运行情况。状态机可以调用子状态机。所有的状态都应该是none-block的，简单说就是\n不会把系统定死在某一个状态里面很久都出不来，比如while(1)或者循环次数较大的for\n结构；否则状态机的存在意义就大打折扣——直接按照流程图写代码不就好了，干吗非\n要翻译成状态机？状态机中，状态的功能应该是等待某一个事件的发生（或者说条件的\n满足）；某些情况下，一些一次性执行完的流程也可以独立成一个状态——它当然没有\n等待任何条件的满足，你可以认为他是无条件进行状态转移的。\n\n总体说来，状态机是一个万能的计算机语言表述方式，与具体的载体语言关系不大。心\n中有状态，代码怎会无状态？状态机是裸机条件下多任务的廉价实现方案。在状态机多\n任务条件下，操作系统牵涉的几乎所有概念都会有所涉及，比如任务的同步，临界区的\n保护，任务间的通讯，任务的优先级，资源的动态分配等等。你可以这么理解，每一个\n状态机都是一个进程，每一个状态都是一个线程，因为进程有自己的资源，而同一个进\n程里面的多个线程是公用同一片资源的。你甚至可以在有抢占式操作系统的情况下用状\n态机，这个时候，操作系统的每一个任务都是个内核，那么整个系统开发就可以登小于\n多核系统开发了。","slug":"[FSM]状态机实践入门","published":1,"updated":"2018-06-02T11:47:16.196Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhxdzsmo0003d4tw9fr31n2c","content":"<p>转自原链接：<a href=\"https://www.amobbs.com/thread-4585393-1-1.html\" target=\"_blank\" rel=\"noopener\">https://www.amobbs.com/thread-4585393-1-1.html</a><br>不用怀疑，单片机的万能语言就是状态机。<br><a id=\"more\"></a><br>还希望大家不要条件反射式的看到状态机就<br>以为我要讲什么VHDL的东西——状态机是一种思维模式，是计算机理论的立足之本（不<br>相信请参考清华大学出版社的《自动机理论与应用》）——因此状态机的实现与语言本<br>身关系并不是绝对的。本文要讨论的状态机，从实现方式上更类似于Java中常用的那种<br>思维模式，而与VHDL相去甚远。<br>路要一步一步走，饭要一口一口吃，为了不把后来人吓跑，状态机理论中更多复杂的部<br>分，我会在以后专门写文章讨论，这里我先找一个切入点，从我常用的2种状态机编写<br>方式为大家慢慢展开。</p>\n<p>首先，关于几个问题，比如：什么地方用状态机？状态机究竟有几种写法？状态机效率<br>到底高不高？是不是把简单问题弄复杂了？这类问题统统不在本文讨论之列，简而言之<br>——谁用谁知道。其实，还不能简单的就这么下了结论，套八股文而不求甚解的也大有<br>人在————因此我要说：关于状态机的各种问题“谁思考谁实践谁坚持谁知道”。</p>\n<h1 id=\"状态机入门第一式：switch-case一线到底\"><a href=\"#状态机入门第一式：switch-case一线到底\" class=\"headerlink\" title=\"状态机入门第一式：switch case一线到底\"></a>状态机入门第一式：switch case一线到底</h1><p>要点：    用switch结构配合一个状态变量，通过修改状态变量的值来切换状态。<br>范例：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//! 定义状态名称与状态值之间的关系，增加可读性</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_START                                   0x00</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_A                                 0x01</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_B                                 0x02</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_RESET                                   0xFF</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">fsm_example_A</span><span class=\"params\">( &lt;&lt;/span&gt;形参列表&gt; )</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">uint8_t</span> s_chFSMState = FSM_START;                      <span class=\"comment\">//!&lt; 定义状态变量</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">switch</span> ( s_chFSMState ) &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_START:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机初始化代码</span></span><br><span class=\"line\">…</span><br><span class=\"line\">s_chFSMState = FSM_STATE_A;                           <span class=\"comment\">//!&lt; 进入下一状态</span></span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_STATE_A:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机A进入下一状态的检测代码</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些进入下一状态时要做的准备工作</span></span><br><span class=\"line\">s_chFSMState = FSM_STATE_B;                       <span class=\"comment\">//!&lt; 进入下一状态</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_STATE_B:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机A进入下一状态的检测代码</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些进入下一状态时要做的准备工作</span></span><br><span class=\"line\">s_chFSMState = FSM_STATE_A;                   <span class=\"comment\">//!&lt; 进入下一状态</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\">…</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_STOP:</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_RESET:</span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机复位相关的代码</span></span><br><span class=\"line\">…</span><br><span class=\"line\">chFSMState = FSM_START;                                    <span class=\"comment\">//!&lt; 状态机复位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//! 返回false表示状态机已经不需要继续运行了</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//! 返回true表示状态机正在运行</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>总结：    从范例可知，这种状态机就是一根筋……并不是说他走不出什么分支来，而<br>是说通常他没有办法让多个状态同时处于激活状态。</p>\n<h1 id=\"状态机入门第二式：if-判断变化无穷\"><a href=\"#状态机入门第二式：if-判断变化无穷\" class=\"headerlink\" title=\"状态机入门第二式：if 判断变化无穷\"></a>状态机入门第二式：if 判断变化无穷</h1><p>要点：     用if else…else if结构的组合来描述状态流程图。<br>什么是状态流程图？我不想多解释，因为就那么个简单的东西，说多了反而神秘兮兮的。<br>状态流程图你可以简单粗暴的认为，他就是流程图，等你用得多了，你就渐渐明白为啥<br>多了“状态”二字；如果你后来或者先前学过状态图，那么很快你就会明白状态流程图<br>比状态图“高级”了多少。<br>1、 不管怎么说，你可以先为你要处理的事物画一个流程图。如果流程图都不会画，就<br>不用凑热闹了。<br>2、 接下来，把流程图上每一个方框或者判断筐都“简单粗暴”地看成一个状态。<br>3、 将每一个状态用if结构表示出来<br>if (&lt;状态标志&gt;) {<br>//! 状态代码<br>…<br>}<br>4、 自己看着办，合并多余的状态，优化优化代码。<br>范例：</p>\n<p>//! 首先将布尔量的状态标志压缩在一个字节里面以节省内存开支</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">union</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">uint8_t</span>     Value;</span><br><span class=\"line\"><span class=\"keyword\">uint8_t</span>     Byte;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT0:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT1:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT2:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT3:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT4:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT5:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT6:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT7:<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;           Bits;</span><br><span class=\"line\">&#125;<span class=\"keyword\">byte_t</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_ACTION_FLAG             s_tbState.Bits</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STOP_ALL_ACTIONS()      do &#123;s_tbState.Value = 0;&#125;while(0)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_START                   (0 == s_tbState.Value)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_A                 FSM_ACTION_FLAG.BIT0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_B                 FSM_ACTION_FLAG.BIT1</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_H                 FSM_ACTION_FLAG.BIT7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">fsm_example_B</span><span class=\"params\">( &lt;&lt;/span&gt;形参列表&gt; )</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">byte_t</span> s_tbState = &#123;<span class=\"number\">0</span>&#125;;                               <span class=\"comment\">//!&lt; 定义状态变量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_START) &#123;                                             <span class=\"comment\">//!&lt; 起始状态</span></span><br><span class=\"line\"><span class=\"comment\">//! 这里放置状态机初始化的代码</span></span><br><span class=\"line\">…</span><br><span class=\"line\">FSM_STATE_A = <span class=\"literal\">true</span>;                                       <span class=\"comment\">//!&lt; 进入状态B，start装台自动结束</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_A) &#123;                                           <span class=\"comment\">//!&lt; 一个典型的简单状态</span></span><br><span class=\"line\"><span class=\"comment\">//! 这里放置状态A的代码或者</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"comment\">//! 这里放置某些条件以开启别的状态</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某些条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些“进入”下一个状态之前的准备工作</span></span><br><span class=\"line\">FSM_STATE_B = <span class=\"literal\">true</span>;                                  <span class=\"comment\">//!&lt; 开启下一个状态</span></span><br><span class=\"line\">FSM_STATE_A = <span class=\"literal\">false</span>;                                 <span class=\"comment\">//!&lt; 结束当前状态</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_B) &#123;                                           <span class=\"comment\">//!&lt; 一个典型的监视状态</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"comment\">//! 这里检测某些条件</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某些条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些“开启”某个状态的准备工作</span></span><br><span class=\"line\">FSM_STATE_C = <span class=\"literal\">true</span>;                                  <span class=\"comment\">//!&lt; 开启某一个状态而不结束当前状态</span></span><br><span class=\"line\">FSM_STATE_D = <span class=\"literal\">true</span>;                                  <span class=\"comment\">//!&lt; 你当然可以一次触发多个状态</span></span><br><span class=\"line\">…</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某些条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 满足某些条件以后关闭当前状态</span></span><br><span class=\"line\">FSM_STATE_B = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_F) &#123;                                            <span class=\"comment\">//!&lt; 一个典型的子状态机调用</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!fsm_example_a(&lt;&lt;/span&gt;实参列表&gt;)) &#123;                  <span class=\"comment\">//!&lt; 等待子状态机返回false</span></span><br><span class=\"line\"><span class=\"comment\">//!子状态机运行完成，进入下一状态</span></span><br><span class=\"line\">…</span><br><span class=\"line\">FSM_STATE_F = <span class=\"literal\">false</span>;                                  <span class=\"comment\">//!&lt; 结束当前状态</span></span><br><span class=\"line\">FSM_STATE_x = <span class=\"literal\">true</span>;                                   <span class=\"comment\">//!&lt; 进入下一状态x代表某个字母</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_H) &#123;                                            <span class=\"comment\">//!&lt; 一个典型的中止状态</span></span><br><span class=\"line\"><span class=\"comment\">//!&lt; 某些状态机的操作，比如释放某些资源</span></span><br><span class=\"line\">…</span><br><span class=\"line\">FSM_STOP_ALL_ACTIONS();                                   <span class=\"comment\">//!&lt; 复位状态机</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;                                             <span class=\"comment\">//!&lt; 返回false表示状态机结束</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">true</span>;                                                  <span class=\"comment\">//!&lt; 返回true表示状态机保持运行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：    从范例可知，这种状态机非常灵活，通过布尔变量的开启和关闭，你可以自<br>由的控制某些状态的开启。同一时刻可能有多个状态是激活的。这种结构几乎可以翻译<br>任何流程图。具体还有很多好处，可以在使用中体会。</p>\n<h1 id=\"状态机入门第三式：状态在心中，无态也变态\"><a href=\"#状态机入门第三式：状态在心中，无态也变态\" class=\"headerlink\" title=\"状态机入门第三式：状态在心中，无态也变态\"></a>状态机入门第三式：状态在心中，无态也变态</h1><p>要点：    所有的函数都可以看作是状态机，只不过普通的函数是一个只有单一状态的<br>状态机。如果函数有返回值，且这个返回值能表征至少两种以上不同的状态（比如返回<br>是一个指针，那么NULL和非NULL就是两种状态；比如返回是一个布尔变量，那么true和<br>false就是两种状态；比如返回的是一个整数，并且整数的某些特征可以被分类，那么<br>这些不同分类就是几种不同的状态），那么这些返回值就可以被用作指示当前状态机的<br>运行情况。状态机可以调用子状态机。所有的状态都应该是none-block的，简单说就是<br>不会把系统定死在某一个状态里面很久都出不来，比如while(1)或者循环次数较大的for<br>结构；否则状态机的存在意义就大打折扣——直接按照流程图写代码不就好了，干吗非<br>要翻译成状态机？状态机中，状态的功能应该是等待某一个事件的发生（或者说条件的<br>满足）；某些情况下，一些一次性执行完的流程也可以独立成一个状态——它当然没有<br>等待任何条件的满足，你可以认为他是无条件进行状态转移的。</p>\n<p>总体说来，状态机是一个万能的计算机语言表述方式，与具体的载体语言关系不大。心<br>中有状态，代码怎会无状态？状态机是裸机条件下多任务的廉价实现方案。在状态机多<br>任务条件下，操作系统牵涉的几乎所有概念都会有所涉及，比如任务的同步，临界区的<br>保护，任务间的通讯，任务的优先级，资源的动态分配等等。你可以这么理解，每一个<br>状态机都是一个进程，每一个状态都是一个线程，因为进程有自己的资源，而同一个进<br>程里面的多个线程是公用同一片资源的。你甚至可以在有抢占式操作系统的情况下用状<br>态机，这个时候，操作系统的每一个任务都是个内核，那么整个系统开发就可以登小于<br>多核系统开发了。</p>\n","site":{"data":{}},"excerpt":"<p>转自原链接：<a href=\"https://www.amobbs.com/thread-4585393-1-1.html\" target=\"_blank\" rel=\"noopener\">https://www.amobbs.com/thread-4585393-1-1.html</a><br>不用怀疑，单片机的万能语言就是状态机。<br>","more":"<br>还希望大家不要条件反射式的看到状态机就<br>以为我要讲什么VHDL的东西——状态机是一种思维模式，是计算机理论的立足之本（不<br>相信请参考清华大学出版社的《自动机理论与应用》）——因此状态机的实现与语言本<br>身关系并不是绝对的。本文要讨论的状态机，从实现方式上更类似于Java中常用的那种<br>思维模式，而与VHDL相去甚远。<br>路要一步一步走，饭要一口一口吃，为了不把后来人吓跑，状态机理论中更多复杂的部<br>分，我会在以后专门写文章讨论，这里我先找一个切入点，从我常用的2种状态机编写<br>方式为大家慢慢展开。</p>\n<p>首先，关于几个问题，比如：什么地方用状态机？状态机究竟有几种写法？状态机效率<br>到底高不高？是不是把简单问题弄复杂了？这类问题统统不在本文讨论之列，简而言之<br>——谁用谁知道。其实，还不能简单的就这么下了结论，套八股文而不求甚解的也大有<br>人在————因此我要说：关于状态机的各种问题“谁思考谁实践谁坚持谁知道”。</p>\n<h1 id=\"状态机入门第一式：switch-case一线到底\"><a href=\"#状态机入门第一式：switch-case一线到底\" class=\"headerlink\" title=\"状态机入门第一式：switch case一线到底\"></a>状态机入门第一式：switch case一线到底</h1><p>要点：    用switch结构配合一个状态变量，通过修改状态变量的值来切换状态。<br>范例：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//! 定义状态名称与状态值之间的关系，增加可读性</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_START                                   0x00</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_A                                 0x01</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_B                                 0x02</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_RESET                                   0xFF</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">fsm_example_A</span><span class=\"params\">( &lt;&lt;/span&gt;形参列表&gt; )</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">uint8_t</span> s_chFSMState = FSM_START;                      <span class=\"comment\">//!&lt; 定义状态变量</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">switch</span> ( s_chFSMState ) &#123;</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_START:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机初始化代码</span></span><br><span class=\"line\">…</span><br><span class=\"line\">s_chFSMState = FSM_STATE_A;                           <span class=\"comment\">//!&lt; 进入下一状态</span></span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_STATE_A:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机A进入下一状态的检测代码</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些进入下一状态时要做的准备工作</span></span><br><span class=\"line\">s_chFSMState = FSM_STATE_B;                       <span class=\"comment\">//!&lt; 进入下一状态</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_STATE_B:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机A进入下一状态的检测代码</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些进入下一状态时要做的准备工作</span></span><br><span class=\"line\">s_chFSMState = FSM_STATE_A;                   <span class=\"comment\">//!&lt; 进入下一状态</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某某条件&gt;) &#123;</span><br><span class=\"line\">…</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">break</span>;</span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_STOP:</span><br><span class=\"line\"><span class=\"keyword\">case</span> FSM_RESET:</span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\"><span class=\"comment\">//! 这里添加状态机复位相关的代码</span></span><br><span class=\"line\">…</span><br><span class=\"line\">chFSMState = FSM_START;                                    <span class=\"comment\">//!&lt; 状态机复位</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//! 返回false表示状态机已经不需要继续运行了</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//! 返回true表示状态机正在运行</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>总结：    从范例可知，这种状态机就是一根筋……并不是说他走不出什么分支来，而<br>是说通常他没有办法让多个状态同时处于激活状态。</p>\n<h1 id=\"状态机入门第二式：if-判断变化无穷\"><a href=\"#状态机入门第二式：if-判断变化无穷\" class=\"headerlink\" title=\"状态机入门第二式：if 判断变化无穷\"></a>状态机入门第二式：if 判断变化无穷</h1><p>要点：     用if else…else if结构的组合来描述状态流程图。<br>什么是状态流程图？我不想多解释，因为就那么个简单的东西，说多了反而神秘兮兮的。<br>状态流程图你可以简单粗暴的认为，他就是流程图，等你用得多了，你就渐渐明白为啥<br>多了“状态”二字；如果你后来或者先前学过状态图，那么很快你就会明白状态流程图<br>比状态图“高级”了多少。<br>1、 不管怎么说，你可以先为你要处理的事物画一个流程图。如果流程图都不会画，就<br>不用凑热闹了。<br>2、 接下来，把流程图上每一个方框或者判断筐都“简单粗暴”地看成一个状态。<br>3、 将每一个状态用if结构表示出来<br>if (&lt;状态标志&gt;) {<br>//! 状态代码<br>…<br>}<br>4、 自己看着办，合并多余的状态，优化优化代码。<br>范例：</p>\n<p>//! 首先将布尔量的状态标志压缩在一个字节里面以节省内存开支</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">union</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">uint8_t</span>     Value;</span><br><span class=\"line\"><span class=\"keyword\">uint8_t</span>     Byte;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> &#123;</span></span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT0:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT1:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT2:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT3:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT4:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT5:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT6:<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> BIT7:<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;           Bits;</span><br><span class=\"line\">&#125;<span class=\"keyword\">byte_t</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_ACTION_FLAG             s_tbState.Bits</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STOP_ALL_ACTIONS()      do &#123;s_tbState.Value = 0;&#125;while(0)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_START                   (0 == s_tbState.Value)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_A                 FSM_ACTION_FLAG.BIT0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_B                 FSM_ACTION_FLAG.BIT1</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> FSM_STATE_H                 FSM_ACTION_FLAG.BIT7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">fsm_example_B</span><span class=\"params\">( &lt;&lt;/span&gt;形参列表&gt; )</span> </span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">byte_t</span> s_tbState = &#123;<span class=\"number\">0</span>&#125;;                               <span class=\"comment\">//!&lt; 定义状态变量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_START) &#123;                                             <span class=\"comment\">//!&lt; 起始状态</span></span><br><span class=\"line\"><span class=\"comment\">//! 这里放置状态机初始化的代码</span></span><br><span class=\"line\">…</span><br><span class=\"line\">FSM_STATE_A = <span class=\"literal\">true</span>;                                       <span class=\"comment\">//!&lt; 进入状态B，start装台自动结束</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_A) &#123;                                           <span class=\"comment\">//!&lt; 一个典型的简单状态</span></span><br><span class=\"line\"><span class=\"comment\">//! 这里放置状态A的代码或者</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"comment\">//! 这里放置某些条件以开启别的状态</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某些条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些“进入”下一个状态之前的准备工作</span></span><br><span class=\"line\">FSM_STATE_B = <span class=\"literal\">true</span>;                                  <span class=\"comment\">//!&lt; 开启下一个状态</span></span><br><span class=\"line\">FSM_STATE_A = <span class=\"literal\">false</span>;                                 <span class=\"comment\">//!&lt; 结束当前状态</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_B) &#123;                                           <span class=\"comment\">//!&lt; 一个典型的监视状态</span></span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"comment\">//! 这里检测某些条件</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某些条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 这里做一些“开启”某个状态的准备工作</span></span><br><span class=\"line\">FSM_STATE_C = <span class=\"literal\">true</span>;                                  <span class=\"comment\">//!&lt; 开启某一个状态而不结束当前状态</span></span><br><span class=\"line\">FSM_STATE_D = <span class=\"literal\">true</span>;                                  <span class=\"comment\">//!&lt; 你当然可以一次触发多个状态</span></span><br><span class=\"line\">…</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (&lt;&lt;/span&gt;某些条件&gt;) &#123;</span><br><span class=\"line\"><span class=\"comment\">//! 满足某些条件以后关闭当前状态</span></span><br><span class=\"line\">FSM_STATE_B = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">…</span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_F) &#123;                                            <span class=\"comment\">//!&lt; 一个典型的子状态机调用</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!fsm_example_a(&lt;&lt;/span&gt;实参列表&gt;)) &#123;                  <span class=\"comment\">//!&lt; 等待子状态机返回false</span></span><br><span class=\"line\"><span class=\"comment\">//!子状态机运行完成，进入下一状态</span></span><br><span class=\"line\">…</span><br><span class=\"line\">FSM_STATE_F = <span class=\"literal\">false</span>;                                  <span class=\"comment\">//!&lt; 结束当前状态</span></span><br><span class=\"line\">FSM_STATE_x = <span class=\"literal\">true</span>;                                   <span class=\"comment\">//!&lt; 进入下一状态x代表某个字母</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (FSM_STATE_H) &#123;                                            <span class=\"comment\">//!&lt; 一个典型的中止状态</span></span><br><span class=\"line\"><span class=\"comment\">//!&lt; 某些状态机的操作，比如释放某些资源</span></span><br><span class=\"line\">…</span><br><span class=\"line\">FSM_STOP_ALL_ACTIONS();                                   <span class=\"comment\">//!&lt; 复位状态机</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">false</span>;                                             <span class=\"comment\">//!&lt; 返回false表示状态机结束</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">true</span>;                                                  <span class=\"comment\">//!&lt; 返回true表示状态机保持运行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：    从范例可知，这种状态机非常灵活，通过布尔变量的开启和关闭，你可以自<br>由的控制某些状态的开启。同一时刻可能有多个状态是激活的。这种结构几乎可以翻译<br>任何流程图。具体还有很多好处，可以在使用中体会。</p>\n<h1 id=\"状态机入门第三式：状态在心中，无态也变态\"><a href=\"#状态机入门第三式：状态在心中，无态也变态\" class=\"headerlink\" title=\"状态机入门第三式：状态在心中，无态也变态\"></a>状态机入门第三式：状态在心中，无态也变态</h1><p>要点：    所有的函数都可以看作是状态机，只不过普通的函数是一个只有单一状态的<br>状态机。如果函数有返回值，且这个返回值能表征至少两种以上不同的状态（比如返回<br>是一个指针，那么NULL和非NULL就是两种状态；比如返回是一个布尔变量，那么true和<br>false就是两种状态；比如返回的是一个整数，并且整数的某些特征可以被分类，那么<br>这些不同分类就是几种不同的状态），那么这些返回值就可以被用作指示当前状态机的<br>运行情况。状态机可以调用子状态机。所有的状态都应该是none-block的，简单说就是<br>不会把系统定死在某一个状态里面很久都出不来，比如while(1)或者循环次数较大的for<br>结构；否则状态机的存在意义就大打折扣——直接按照流程图写代码不就好了，干吗非<br>要翻译成状态机？状态机中，状态的功能应该是等待某一个事件的发生（或者说条件的<br>满足）；某些情况下，一些一次性执行完的流程也可以独立成一个状态——它当然没有<br>等待任何条件的满足，你可以认为他是无条件进行状态转移的。</p>\n<p>总体说来，状态机是一个万能的计算机语言表述方式，与具体的载体语言关系不大。心<br>中有状态，代码怎会无状态？状态机是裸机条件下多任务的廉价实现方案。在状态机多<br>任务条件下，操作系统牵涉的几乎所有概念都会有所涉及，比如任务的同步，临界区的<br>保护，任务间的通讯，任务的优先级，资源的动态分配等等。你可以这么理解，每一个<br>状态机都是一个进程，每一个状态都是一个线程，因为进程有自己的资源，而同一个进<br>程里面的多个线程是公用同一片资源的。你甚至可以在有抢占式操作系统的情况下用状<br>态机，这个时候，操作系统的每一个任务都是个内核，那么整个系统开发就可以登小于<br>多核系统开发了。</p>"},{"title":"stm8s之NEC协议红外发射","date":"2017-07-15T04:49:25.000Z","toc":false,"_content":"单片机采用stm8s103f3p6，发送引脚为TIM2的oc3即PA3引脚。\n<!-- more -->\n```\n//******************************************************************************                              \n//introduce:        红外传感器发送驱动        \n//******************************************************************************     \n#include \"stm8s.h\"   \n#include \"delay.h\"\n\n/*********************外部变量************************/    \nstatic void TIM1_Config(void);\nint main()\n{\n  CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);\n  CLK_HSICmd(ENABLE);\n  delay_init(16);\n  u32 Send_Val=0x535A00FF;\n  u8 i;  \n  GPIO_Init(SZ_INFRARED_SEND_PORT, GPIO_MODE_OUT_PP_HIGH_FAST);\n  TIM1_Config();\n  while(1){\n    \n    \n    \n    TIM2_SetCompare3(421);\n    \n    delay_ms(9);\n    TIM2_SetCompare3(0);\n    delay_ms(4);\n    delay_us(500);\n    \n    for(i=0;i<32;i++){\n      if((0x80000000>>i)&Send_Val){\n        TIM2_SetCompare3(130);\n        delay_us(560);\n        TIM2_SetCompare3(0);\n        delay_us(1690);\n      }else{\n        TIM2_SetCompare3(130);\n        delay_us(560);\n        TIM2_SetCompare3(0);\n        delay_us(560);\n      }\n    }\n    TIM2_SetCompare3(130);\n    delay_ms(1);\n    TIM2_SetCompare3(0);\n    delay_ms(1000);\n  }\n}\n定时器配置PWM如下：\n\nstatic void TIM1_Config(void)\n{\n  \n  TIM2_DeInit();\n  \n  \n  TIM2_TimeBaseInit(TIM2_PRESCALER_1, 421);\n  \n\n  \n  TIM2_OC3Init(TIM2_OCMODE_PWM1, TIM2_OUTPUTSTATE_DISABLE, 0, TIM2_OCPOLARITY_HIGH);\n  \n  TIM2_CCxCmd(TIM2_CHANNEL_3, ENABLE);\n  TIM2_Cmd(ENABLE);\n}\n```","source":"_posts/stm8s之NEC协议红外发射.md","raw":"---\ntitle: \"stm8s之NEC协议红外发射\"\ndate: 2017-07-15 12:49:25\ntoc: false\ntags: [单片机,stm8]\n---\n单片机采用stm8s103f3p6，发送引脚为TIM2的oc3即PA3引脚。\n<!-- more -->\n```\n//******************************************************************************                              \n//introduce:        红外传感器发送驱动        \n//******************************************************************************     \n#include \"stm8s.h\"   \n#include \"delay.h\"\n\n/*********************外部变量************************/    \nstatic void TIM1_Config(void);\nint main()\n{\n  CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);\n  CLK_HSICmd(ENABLE);\n  delay_init(16);\n  u32 Send_Val=0x535A00FF;\n  u8 i;  \n  GPIO_Init(SZ_INFRARED_SEND_PORT, GPIO_MODE_OUT_PP_HIGH_FAST);\n  TIM1_Config();\n  while(1){\n    \n    \n    \n    TIM2_SetCompare3(421);\n    \n    delay_ms(9);\n    TIM2_SetCompare3(0);\n    delay_ms(4);\n    delay_us(500);\n    \n    for(i=0;i<32;i++){\n      if((0x80000000>>i)&Send_Val){\n        TIM2_SetCompare3(130);\n        delay_us(560);\n        TIM2_SetCompare3(0);\n        delay_us(1690);\n      }else{\n        TIM2_SetCompare3(130);\n        delay_us(560);\n        TIM2_SetCompare3(0);\n        delay_us(560);\n      }\n    }\n    TIM2_SetCompare3(130);\n    delay_ms(1);\n    TIM2_SetCompare3(0);\n    delay_ms(1000);\n  }\n}\n定时器配置PWM如下：\n\nstatic void TIM1_Config(void)\n{\n  \n  TIM2_DeInit();\n  \n  \n  TIM2_TimeBaseInit(TIM2_PRESCALER_1, 421);\n  \n\n  \n  TIM2_OC3Init(TIM2_OCMODE_PWM1, TIM2_OUTPUTSTATE_DISABLE, 0, TIM2_OCPOLARITY_HIGH);\n  \n  TIM2_CCxCmd(TIM2_CHANNEL_3, ENABLE);\n  TIM2_Cmd(ENABLE);\n}\n```","slug":"stm8s之NEC协议红外发射","published":1,"updated":"2018-06-02T11:52:53.733Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhxdzsmp0004d4twx1q0gmy3","content":"<p>单片机采用stm8s103f3p6，发送引脚为TIM2的oc3即PA3引脚。<br><a id=\"more\"></a><br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>                              </span><br><span class=\"line\">//introduce:        红外传感器发送驱动        </span><br><span class=\"line\">//<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>     </span><br><span class=\"line\"><span class=\"section\">#include \"stm8s.h\"   </span></span><br><span class=\"line\"><span class=\"section\">#include \"delay.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">*外部变量*</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>/    </span><br><span class=\"line\">static void TIM1_Config(void);</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  CLK<span class=\"emphasis\">_HSIPrescalerConfig(CLK_</span>PRESCALER_HSIDIV1);</span><br><span class=\"line\">  CLK_HSICmd(ENABLE);</span><br><span class=\"line\">  delay_init(16);</span><br><span class=\"line\">  u32 Send_Val=0x535A00FF;</span><br><span class=\"line\">  u8 i;  </span><br><span class=\"line\">  GPIO<span class=\"emphasis\">_Init(SZ_</span>INFRARED<span class=\"emphasis\">_SEND_</span>PORT, GPIO<span class=\"emphasis\">_MODE_</span>OUT<span class=\"emphasis\">_PP_</span>HIGH_FAST);</span><br><span class=\"line\">  TIM1_Config();</span><br><span class=\"line\">  while(1)&#123;</span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(421);</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(9);</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(4);</span></span><br><span class=\"line\"><span class=\"code\">    delay_us(500);</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    for(i=0;i&lt;32;i++)&#123;</span></span><br><span class=\"line\"><span class=\"code\">      if((0x80000000&gt;&gt;i)&amp;Send_Val)&#123;</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(130);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(560);</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(1690);</span></span><br><span class=\"line\"><span class=\"code\">      &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(130);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(560);</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(560);</span></span><br><span class=\"line\"><span class=\"code\">      &#125;</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(130);</span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(1);</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(1000);</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">定时器配置PWM如下：</span><br><span class=\"line\"></span><br><span class=\"line\">static void TIM1_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2_DeInit();</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_TimeBaseInit(TIM2_</span>PRESCALER_1, 421);</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_OC3Init(TIM2_</span>OCMODE<span class=\"emphasis\">_PWM1, TIM2_</span>OUTPUTSTATE<span class=\"emphasis\">_DISABLE, 0, TIM2_</span>OCPOLARITY_HIGH);</span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_CCxCmd(TIM2_</span>CHANNEL_3, ENABLE);</span><br><span class=\"line\">  TIM2_Cmd(ENABLE);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>单片机采用stm8s103f3p6，发送引脚为TIM2的oc3即PA3引脚。<br>","more":"<br><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>                              </span><br><span class=\"line\">//introduce:        红外传感器发送驱动        </span><br><span class=\"line\">//<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>     </span><br><span class=\"line\"><span class=\"section\">#include \"stm8s.h\"   </span></span><br><span class=\"line\"><span class=\"section\">#include \"delay.h\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">*外部变量*</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span>/    </span><br><span class=\"line\">static void TIM1_Config(void);</span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  CLK<span class=\"emphasis\">_HSIPrescalerConfig(CLK_</span>PRESCALER_HSIDIV1);</span><br><span class=\"line\">  CLK_HSICmd(ENABLE);</span><br><span class=\"line\">  delay_init(16);</span><br><span class=\"line\">  u32 Send_Val=0x535A00FF;</span><br><span class=\"line\">  u8 i;  </span><br><span class=\"line\">  GPIO<span class=\"emphasis\">_Init(SZ_</span>INFRARED<span class=\"emphasis\">_SEND_</span>PORT, GPIO<span class=\"emphasis\">_MODE_</span>OUT<span class=\"emphasis\">_PP_</span>HIGH_FAST);</span><br><span class=\"line\">  TIM1_Config();</span><br><span class=\"line\">  while(1)&#123;</span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(421);</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(9);</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(4);</span></span><br><span class=\"line\"><span class=\"code\">    delay_us(500);</span></span><br><span class=\"line\"><span class=\"code\">    </span></span><br><span class=\"line\"><span class=\"code\">    for(i=0;i&lt;32;i++)&#123;</span></span><br><span class=\"line\"><span class=\"code\">      if((0x80000000&gt;&gt;i)&amp;Send_Val)&#123;</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(130);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(560);</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(1690);</span></span><br><span class=\"line\"><span class=\"code\">      &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(130);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(560);</span></span><br><span class=\"line\"><span class=\"code\">        TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">        delay_us(560);</span></span><br><span class=\"line\"><span class=\"code\">      &#125;</span></span><br><span class=\"line\"><span class=\"code\">    &#125;</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(130);</span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(1);</span></span><br><span class=\"line\"><span class=\"code\">    TIM2_SetCompare3(0);</span></span><br><span class=\"line\"><span class=\"code\">    delay_ms(1000);</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">定时器配置PWM如下：</span><br><span class=\"line\"></span><br><span class=\"line\">static void TIM1_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2_DeInit();</span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_TimeBaseInit(TIM2_</span>PRESCALER_1, 421);</span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_OC3Init(TIM2_</span>OCMODE<span class=\"emphasis\">_PWM1, TIM2_</span>OUTPUTSTATE<span class=\"emphasis\">_DISABLE, 0, TIM2_</span>OCPOLARITY_HIGH);</span><br><span class=\"line\">  </span><br><span class=\"line\">  TIM2<span class=\"emphasis\">_CCxCmd(TIM2_</span>CHANNEL_3, ENABLE);</span><br><span class=\"line\">  TIM2_Cmd(ENABLE);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"c语言define用法","date":"2017-07-27T04:55:22.000Z","toc":true,"_content":"# 1.简单的宏定义\n#define 标识符 替换列表（替换列表可以是数，字符串字面量，标点符号，运算符，标识符，关键字，字符常量。注意：替换列表是可以为空的）\n<!-- more -->\n典型错误：\n#define N = 100\nint a[N]; /*这样会成为int a[= 100],这里会处理成为一种标识记号一样*/\n#define N 100;\nint a[N]; /*带分号的定义会成为int a[100;],这是一种很常见的错误*/\n#define pin (int*);\npin a,b;\nint* a,b; /*本意是a和b都是int型指针，但是实际上变成int* a,b;a是int型指针，而b是int型变量。这是应该使用typedef来代替define，这样a和b就都是int型指针了。*/\n典型的使用方法：\n使用宏定义我们可以自己根据自己的习惯来定义甚至改变C语言的语法习惯，例如：\n#define BEGIN {\n#define END }\nint main()BEGIN\nprintf (“DEFINE—-\\n”);\nEND\n定义一个循环\n#define LOOP for(;;)\n重新定义数据类型\n#define IT int\n\n# 2.带参数的宏\n#define 标识符（x1,x2,x3…xn） 替换列表  （注意：x1,x2,x3..是宏的参数，标识符和其左括弧之间不能有空格）\n使用方法：\n#define MAX(x,y) ((x)>(y)?(x):(y))\ni=MAX(j+k,m-n);\n替换为：\ni=MAX((j+k)>(m-n)?(j+k):(m-n));\n#define SI_EX(n) ((n)%2==0)\nif(SI_EX(i)) i++;\n替换为：\nif(SI_EX((i)%2==0))\n通过以上例子我们可以看出，标识符带参数（X1，X2，X3…..）在替换时会被替换列表（Y1，Y2，Y3….）对应的替换，但是和顺序无关。\n\n# 3.宏的特殊单行定义\n#define A(x) T_##x\n#define B（x) #@x\n#define C（x) #x\nx=1\n替换为：\nA(1)——> T_1 （T_##x,##符号是记号粘黏符号，将前后的字符粘黏起来。）\nB(1)——> ‘1’ （ #@x , #@ 符号会将宏的参数进行字符串字面量化，并且加‘’号）\nC(1)——> “1” （ #x ,#符号会将宏的参数进行字符串字面量化，并且加””号）\n\n# 4.define的多行定义\ndefine可以替代多行的代码，在每一个换行的时候加上一个”\\”\n#define MAX(X,Y) do { \\\n语句1; \\\n语句2; \\\n/* 注释的写法 */ \\\n} while(0) /* (no trailing ; ) */ \\\n\n#5.在大规模的开发过程中，特别是跨平台和系统的软件里，define最重要的功能是条件编译。\n#ifdef WINDOWS\n……\n……\n#endif\n#ifdef LINUX\n……\n……\n#endif\n可以在编译的时候通过#define设置编译环境\n\n# 6.取消宏\n#undef 标识符\n\n# 7.条件编译\n#ifdef XXX…(#else) … #endif\n\n# 8.预定义宏\n在C语言中收录了一些有用的宏，这些宏是提供当前编译信息的。\n__LINE__        被编译文件的行数\n（整型）\n__FILE__  被编译文件的名字 （字符型）\n__DATE__  编译日期 （字符型）\n__TIME__  编译时间 （字符型）\n__STDC__  如果编译器接受标准C，那么值为1. （整型）\n通常我们在编译的时候我们可以用这些预定义的宏来进行排错，例如：\n一般情况下，当出现除零的情况时编译器是没有提示的，我们可以自定义一个解决办法。\n#define CHECKZERO(divisor)\\\nif(divisor==0)\\\nprintf(“***ATTEMPT TO DIVIDE BY ZERO IN LINE %d of file %s ***\\n”,__LINE__,__FILE__);\\\n引用方法\nCHECKZERO(j);\nk=i/j;","source":"_posts/c语言define用法.md","raw":"---\ntitle: \"c语言define用法\"\ndate: 2017-07-27 12:55:22\ntoc: true\ntags: [c]\n---\n# 1.简单的宏定义\n#define 标识符 替换列表（替换列表可以是数，字符串字面量，标点符号，运算符，标识符，关键字，字符常量。注意：替换列表是可以为空的）\n<!-- more -->\n典型错误：\n#define N = 100\nint a[N]; /*这样会成为int a[= 100],这里会处理成为一种标识记号一样*/\n#define N 100;\nint a[N]; /*带分号的定义会成为int a[100;],这是一种很常见的错误*/\n#define pin (int*);\npin a,b;\nint* a,b; /*本意是a和b都是int型指针，但是实际上变成int* a,b;a是int型指针，而b是int型变量。这是应该使用typedef来代替define，这样a和b就都是int型指针了。*/\n典型的使用方法：\n使用宏定义我们可以自己根据自己的习惯来定义甚至改变C语言的语法习惯，例如：\n#define BEGIN {\n#define END }\nint main()BEGIN\nprintf (“DEFINE—-\\n”);\nEND\n定义一个循环\n#define LOOP for(;;)\n重新定义数据类型\n#define IT int\n\n# 2.带参数的宏\n#define 标识符（x1,x2,x3…xn） 替换列表  （注意：x1,x2,x3..是宏的参数，标识符和其左括弧之间不能有空格）\n使用方法：\n#define MAX(x,y) ((x)>(y)?(x):(y))\ni=MAX(j+k,m-n);\n替换为：\ni=MAX((j+k)>(m-n)?(j+k):(m-n));\n#define SI_EX(n) ((n)%2==0)\nif(SI_EX(i)) i++;\n替换为：\nif(SI_EX((i)%2==0))\n通过以上例子我们可以看出，标识符带参数（X1，X2，X3…..）在替换时会被替换列表（Y1，Y2，Y3….）对应的替换，但是和顺序无关。\n\n# 3.宏的特殊单行定义\n#define A(x) T_##x\n#define B（x) #@x\n#define C（x) #x\nx=1\n替换为：\nA(1)——> T_1 （T_##x,##符号是记号粘黏符号，将前后的字符粘黏起来。）\nB(1)——> ‘1’ （ #@x , #@ 符号会将宏的参数进行字符串字面量化，并且加‘’号）\nC(1)——> “1” （ #x ,#符号会将宏的参数进行字符串字面量化，并且加””号）\n\n# 4.define的多行定义\ndefine可以替代多行的代码，在每一个换行的时候加上一个”\\”\n#define MAX(X,Y) do { \\\n语句1; \\\n语句2; \\\n/* 注释的写法 */ \\\n} while(0) /* (no trailing ; ) */ \\\n\n#5.在大规模的开发过程中，特别是跨平台和系统的软件里，define最重要的功能是条件编译。\n#ifdef WINDOWS\n……\n……\n#endif\n#ifdef LINUX\n……\n……\n#endif\n可以在编译的时候通过#define设置编译环境\n\n# 6.取消宏\n#undef 标识符\n\n# 7.条件编译\n#ifdef XXX…(#else) … #endif\n\n# 8.预定义宏\n在C语言中收录了一些有用的宏，这些宏是提供当前编译信息的。\n__LINE__        被编译文件的行数\n（整型）\n__FILE__  被编译文件的名字 （字符型）\n__DATE__  编译日期 （字符型）\n__TIME__  编译时间 （字符型）\n__STDC__  如果编译器接受标准C，那么值为1. （整型）\n通常我们在编译的时候我们可以用这些预定义的宏来进行排错，例如：\n一般情况下，当出现除零的情况时编译器是没有提示的，我们可以自定义一个解决办法。\n#define CHECKZERO(divisor)\\\nif(divisor==0)\\\nprintf(“***ATTEMPT TO DIVIDE BY ZERO IN LINE %d of file %s ***\\n”,__LINE__,__FILE__);\\\n引用方法\nCHECKZERO(j);\nk=i/j;","slug":"c语言define用法","published":1,"updated":"2018-06-02T11:22:57.712Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhxdzsmr0005d4twpy0dtu1m","content":"<h1 id=\"1-简单的宏定义\"><a href=\"#1-简单的宏定义\" class=\"headerlink\" title=\"1.简单的宏定义\"></a>1.简单的宏定义</h1><p>#define 标识符 替换列表（替换列表可以是数，字符串字面量，标点符号，运算符，标识符，关键字，字符常量。注意：替换列表是可以为空的）<br><a id=\"more\"></a><br>典型错误：</p>\n<p>#define N = 100<br>int a[N]; /<em>这样会成为int a[= 100],这里会处理成为一种标识记号一样</em>/</p>\n<p>#define N 100;<br>int a[N]; /<em>带分号的定义会成为int a[100;],这是一种很常见的错误</em>/</p>\n<p>#define pin (int<em>);<br>pin a,b;<br>int</em> a,b; /<em>本意是a和b都是int型指针，但是实际上变成int</em> a,b;a是int型指针，而b是int型变量。这是应该使用typedef来代替define，这样a和b就都是int型指针了。*/<br>典型的使用方法：<br>使用宏定义我们可以自己根据自己的习惯来定义甚至改变C语言的语法习惯，例如：</p>\n<p>#define BEGIN {</p>\n<p>#define END }<br>int main()BEGIN<br>printf (“DEFINE—-\\n”);<br>END<br>定义一个循环</p>\n<p>#define LOOP for(;;)<br>重新定义数据类型</p>\n<p>#define IT int</p>\n<h1 id=\"2-带参数的宏\"><a href=\"#2-带参数的宏\" class=\"headerlink\" title=\"2.带参数的宏\"></a>2.带参数的宏</h1><p>#define 标识符（x1,x2,x3…xn） 替换列表  （注意：x1,x2,x3..是宏的参数，标识符和其左括弧之间不能有空格）<br>使用方法：</p>\n<p>#define MAX(x,y) ((x)&gt;(y)?(x):(y))<br>i=MAX(j+k,m-n);<br>替换为：<br>i=MAX((j+k)&gt;(m-n)?(j+k):(m-n));</p>\n<p>#define SI_EX(n) ((n)%2==0)<br>if(SI_EX(i)) i++;<br>替换为：<br>if(SI_EX((i)%2==0))<br>通过以上例子我们可以看出，标识符带参数（X1，X2，X3…..）在替换时会被替换列表（Y1，Y2，Y3….）对应的替换，但是和顺序无关。</p>\n<h1 id=\"3-宏的特殊单行定义\"><a href=\"#3-宏的特殊单行定义\" class=\"headerlink\" title=\"3.宏的特殊单行定义\"></a>3.宏的特殊单行定义</h1><p>#define A(x) T_##x</p>\n<p>#define B（x) #@x</p>\n<p>#define C（x) #x<br>x=1<br>替换为：<br>A(1)——&gt; T_1 （T_##x,##符号是记号粘黏符号，将前后的字符粘黏起来。）<br>B(1)——&gt; ‘1’ （ #@x , #@ 符号会将宏的参数进行字符串字面量化，并且加‘’号）<br>C(1)——&gt; “1” （ #x ,#符号会将宏的参数进行字符串字面量化，并且加””号）</p>\n<h1 id=\"4-define的多行定义\"><a href=\"#4-define的多行定义\" class=\"headerlink\" title=\"4.define的多行定义\"></a>4.define的多行定义</h1><p>define可以替代多行的代码，在每一个换行的时候加上一个”\\”</p>\n<p>#define MAX(X,Y) do { \\<br>语句1; \\<br>语句2; \\<br>/<em> 注释的写法 </em>/ \\<br>} while(0) /<em> (no trailing ; ) </em>/ \\</p>\n<p>#5.在大规模的开发过程中，特别是跨平台和系统的软件里，define最重要的功能是条件编译。</p>\n<p>#ifdef WINDOWS<br>……<br>……</p>\n<p>#endif</p>\n<p>#ifdef LINUX<br>……<br>……</p>\n<p>#endif<br>可以在编译的时候通过#define设置编译环境</p>\n<h1 id=\"6-取消宏\"><a href=\"#6-取消宏\" class=\"headerlink\" title=\"6.取消宏\"></a>6.取消宏</h1><p>#undef 标识符</p>\n<h1 id=\"7-条件编译\"><a href=\"#7-条件编译\" class=\"headerlink\" title=\"7.条件编译\"></a>7.条件编译</h1><p>#ifdef XXX…(#else) … #endif</p>\n<h1 id=\"8-预定义宏\"><a href=\"#8-预定义宏\" class=\"headerlink\" title=\"8.预定义宏\"></a>8.预定义宏</h1><p>在C语言中收录了一些有用的宏，这些宏是提供当前编译信息的。<br><strong>LINE</strong>        被编译文件的行数<br>（整型）<br><strong>FILE</strong>  被编译文件的名字 （字符型）<br><strong>DATE</strong>  编译日期 （字符型）<br><strong>TIME</strong>  编译时间 （字符型）<br><strong>STDC</strong>  如果编译器接受标准C，那么值为1. （整型）<br>通常我们在编译的时候我们可以用这些预定义的宏来进行排错，例如：<br>一般情况下，当出现除零的情况时编译器是没有提示的，我们可以自定义一个解决办法。</p>\n<p>#define CHECKZERO(divisor)\\<br>if(divisor==0)\\<br>printf(“<strong><em>ATTEMPT TO DIVIDE BY ZERO IN LINE %d of file %s </em></strong>\\n”,<strong>LINE</strong>,<strong>FILE</strong>);\\<br>引用方法<br>CHECKZERO(j);<br>k=i/j;</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"1-简单的宏定义\"><a href=\"#1-简单的宏定义\" class=\"headerlink\" title=\"1.简单的宏定义\"></a>1.简单的宏定义</h1><p>#define 标识符 替换列表（替换列表可以是数，字符串字面量，标点符号，运算符，标识符，关键字，字符常量。注意：替换列表是可以为空的）<br>","more":"<br>典型错误：</p>\n<p>#define N = 100<br>int a[N]; /<em>这样会成为int a[= 100],这里会处理成为一种标识记号一样</em>/</p>\n<p>#define N 100;<br>int a[N]; /<em>带分号的定义会成为int a[100;],这是一种很常见的错误</em>/</p>\n<p>#define pin (int<em>);<br>pin a,b;<br>int</em> a,b; /<em>本意是a和b都是int型指针，但是实际上变成int</em> a,b;a是int型指针，而b是int型变量。这是应该使用typedef来代替define，这样a和b就都是int型指针了。*/<br>典型的使用方法：<br>使用宏定义我们可以自己根据自己的习惯来定义甚至改变C语言的语法习惯，例如：</p>\n<p>#define BEGIN {</p>\n<p>#define END }<br>int main()BEGIN<br>printf (“DEFINE—-\\n”);<br>END<br>定义一个循环</p>\n<p>#define LOOP for(;;)<br>重新定义数据类型</p>\n<p>#define IT int</p>\n<h1 id=\"2-带参数的宏\"><a href=\"#2-带参数的宏\" class=\"headerlink\" title=\"2.带参数的宏\"></a>2.带参数的宏</h1><p>#define 标识符（x1,x2,x3…xn） 替换列表  （注意：x1,x2,x3..是宏的参数，标识符和其左括弧之间不能有空格）<br>使用方法：</p>\n<p>#define MAX(x,y) ((x)&gt;(y)?(x):(y))<br>i=MAX(j+k,m-n);<br>替换为：<br>i=MAX((j+k)&gt;(m-n)?(j+k):(m-n));</p>\n<p>#define SI_EX(n) ((n)%2==0)<br>if(SI_EX(i)) i++;<br>替换为：<br>if(SI_EX((i)%2==0))<br>通过以上例子我们可以看出，标识符带参数（X1，X2，X3…..）在替换时会被替换列表（Y1，Y2，Y3….）对应的替换，但是和顺序无关。</p>\n<h1 id=\"3-宏的特殊单行定义\"><a href=\"#3-宏的特殊单行定义\" class=\"headerlink\" title=\"3.宏的特殊单行定义\"></a>3.宏的特殊单行定义</h1><p>#define A(x) T_##x</p>\n<p>#define B（x) #@x</p>\n<p>#define C（x) #x<br>x=1<br>替换为：<br>A(1)——&gt; T_1 （T_##x,##符号是记号粘黏符号，将前后的字符粘黏起来。）<br>B(1)——&gt; ‘1’ （ #@x , #@ 符号会将宏的参数进行字符串字面量化，并且加‘’号）<br>C(1)——&gt; “1” （ #x ,#符号会将宏的参数进行字符串字面量化，并且加””号）</p>\n<h1 id=\"4-define的多行定义\"><a href=\"#4-define的多行定义\" class=\"headerlink\" title=\"4.define的多行定义\"></a>4.define的多行定义</h1><p>define可以替代多行的代码，在每一个换行的时候加上一个”\\”</p>\n<p>#define MAX(X,Y) do { \\<br>语句1; \\<br>语句2; \\<br>/<em> 注释的写法 </em>/ \\<br>} while(0) /<em> (no trailing ; ) </em>/ \\</p>\n<p>#5.在大规模的开发过程中，特别是跨平台和系统的软件里，define最重要的功能是条件编译。</p>\n<p>#ifdef WINDOWS<br>……<br>……</p>\n<p>#endif</p>\n<p>#ifdef LINUX<br>……<br>……</p>\n<p>#endif<br>可以在编译的时候通过#define设置编译环境</p>\n<h1 id=\"6-取消宏\"><a href=\"#6-取消宏\" class=\"headerlink\" title=\"6.取消宏\"></a>6.取消宏</h1><p>#undef 标识符</p>\n<h1 id=\"7-条件编译\"><a href=\"#7-条件编译\" class=\"headerlink\" title=\"7.条件编译\"></a>7.条件编译</h1><p>#ifdef XXX…(#else) … #endif</p>\n<h1 id=\"8-预定义宏\"><a href=\"#8-预定义宏\" class=\"headerlink\" title=\"8.预定义宏\"></a>8.预定义宏</h1><p>在C语言中收录了一些有用的宏，这些宏是提供当前编译信息的。<br><strong>LINE</strong>        被编译文件的行数<br>（整型）<br><strong>FILE</strong>  被编译文件的名字 （字符型）<br><strong>DATE</strong>  编译日期 （字符型）<br><strong>TIME</strong>  编译时间 （字符型）<br><strong>STDC</strong>  如果编译器接受标准C，那么值为1. （整型）<br>通常我们在编译的时候我们可以用这些预定义的宏来进行排错，例如：<br>一般情况下，当出现除零的情况时编译器是没有提示的，我们可以自定义一个解决办法。</p>\n<p>#define CHECKZERO(divisor)\\<br>if(divisor==0)\\<br>printf(“<strong><em>ATTEMPT TO DIVIDE BY ZERO IN LINE %d of file %s </em></strong>\\n”,<strong>LINE</strong>,<strong>FILE</strong>);\\<br>引用方法<br>CHECKZERO(j);<br>k=i/j;</p>"},{"title":"stm8矩阵键盘扫描程序","date":"2017-07-12T16:49:25.000Z","toc":false,"_content":"按键通常有：IO口按键（BUTTON)，AD按键（通过AD采样电压），IR（遥控器）\n按按键功能分：有短按键，长按键，连续按键。打个比方，遥控电视机，按一下音量键，音量增加1，这个就是短按键。按住音量键不放，音量连续加，这个就是连续按键。按住一个按键5s,系统会复位，这个是长按键。\n<!-- more -->\nIO口按键，就是我们比较常见的一个IO接一个按键，或者是一个矩阵键盘。很多新人的处理方法可能是采样延时的方法，当年我也是这样的，如下\n```\n   if(GETIO==low)\n    { \n      delay_10ms()\n      if(GETIO==low)\n      {\n        //得到按键值\n      }\n    }\n```\n这种方法虽然简单，但是有很大弊端。首先 Delay浪费很多时间，影响系统。第二，无法判断长短按键，连续按键。第三，如果这个按键是开关机按键系统在低功耗状态下，需要中断唤醒，这种方法比较容易出问题，如STM8S系列的\nhalt 模式。\n\n所以我们一般在产品开发的过程中，采用扫描的方法，就是每隔10ms或者20ms 去检测IO的状态，看是否有按键，然后去抖动，判断按键功能。\n\n下面是本人写的4*4矩阵键盘扫描程序代码，容易修改，可以根据自己的时间需要，进行长短按键，连续按键,还有组合按键的判断。\n\n \n```\n/* Includes ------------------------------------------------------------------*/\n#include \"stm8s.h\"\n#include \"delay.h\"\n/* Private defines -----------------------------------------------------------*/\n\n#define BUTTON_FILTER_TIME 5\n#define BUTTON_LONG_TIME 50 /* 持续1秒，认为长按事件 */\n\n/**\n******************************************************************************\n宏定义设定行号和列号\n按键序号排列\n\n第一列 第二列 第三列 第四列\n\n第一行 1 2 3 4\n\n第二行 5 6 7 8\n\n第三行 9 10 11 12\n\n第四行 13 14 15 16\n\n \n\n******************************************************************************\n*/\n\n#define ROW_1 GPIOC, GPIO_PIN_4 /* 按键第一行*/\n#define ROW_2 GPIOC, GPIO_PIN_5 /* 按键第二行*/\n#define ROW_3 GPIOC, GPIO_PIN_6 /* 按键第三行*/\n#define ROW_4 GPIOC, GPIO_PIN_7 /* 按键第四行*/\n#define COLUMN_1 GPIOA, GPIO_PIN_1 /* 按键第一列*/\n#define COLUMN_2 GPIOA, GPIO_PIN_2 /* 按键第二列*/\n#define COLUMN_3 GPIOA, GPIO_PIN_3 /* 按键第三列*/\n#define COLUMN_4 GPIOD, GPIO_PIN_4 /* 按键第四列*/\n\n \n\n \n\nu8 KeyDownCode[]= {0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f};\n//按键按下的键值\nu8 KeyUpCode[]={0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f};\n//按键弹起的键值\nu8 KeyLongCode[]={0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfe,0xff};\n//按键长按的键值\n\n \n\ntypedef struct\n{\n/* 下面是一个函数指针，指向判断按键手否按下的函数 */\n\n\tunsigned char (*IsKeyDownFunc)(void); /* 按键按下的判断函数,1表示按下 */\n\tunsigned char Count; /* 滤波器计数器 */\n\tunsigned char FilterTime; /* 滤波时间(最大255,表示2550ms) */\n\tunsigned short LongCount; /* 长按计数器 */\n\tunsigned short LongTime; /* 按键按下持续时间, 0表示不检测长按 */\n\tunsigned char State; /* 按键当前状态（按下还是弹起） */\n\tunsigned char KeyCodeUp; /* 按键弹起的键值代码, 0表示不检测按键弹起 */\n\tunsigned char KeyCodeDown; /* 按键按下的键值代码, 0表示不检测按键按下 */\n\tunsigned char KeyCodeLong; /* 按键长按的键值代码, 0表示不检测长按 */\n\tunsigned char RepeatSpeed; /* 连续按键周期 */\n\tunsigned char RepeatCount; /* 连续按键计数器 */\n}BUTTON_T;\n\nBUTTON_T Key[16];\n\n \n\n \n\n/* Private function prototypes -----------------------------------------------*/\n/* Private functions ---------------------------------------------------------*/\nstatic void UART_Config(void);\n\nvoid Pannelkey_Polling(void);\nvoid Button_Detect(BUTTON_T *_pBtn);\n\n \n\nvoid Key_Init(void);\n//矩阵键盘扫描按键检测按下函数\nunsigned char Key_1_Down(void);\nunsigned char Key_2_Down(void);\nunsigned char Key_3_Down(void);\nunsigned char Key_4_Down(void);\nunsigned char Key_5_Down(void);\nunsigned char Key_6_Down(void);\nunsigned char Key_7_Down(void);\nunsigned char Key_8_Down(void);\nunsigned char Key_9_Down(void);\nunsigned char Key_10_Down(void);\nunsigned char Key_11_Down(void);\nunsigned char Key_12_Down(void);\nunsigned char Key_13_Down(void);\nunsigned char Key_14_Down(void);\nunsigned char Key_15_Down(void);\nunsigned char Key_16_Down(void);\n//矩阵键盘扫描按键检测按下函数\n//\n//u8 KeyValue,COLUMN_VALUE1,COLUMN_VALUE2,COLUMN_VALUE3,COLUMN_VALUE4,column_value;\n//u8 ROW_VALUE1,ROW_VALUE2,ROW_VALUE3,ROW_VALUE4,row_value;\n\n/* 按键滤波时间50ms, 单位10ms\n*只有连续检测到50ms状态不变才认为有效，包括弹起和按下两种事件\n*/\n\n \n\n/*\n每个按键对应1个全局的结构体变量。\n其成员变量是实现滤波和多种按键状态所必须的\n*/\n\nvoid main(void)\n{\n\tCLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);\n\tCLK_HSICmd(ENABLE);\n\n\tdelay_init(16);\n\tKey_Init();\n\tUART_Config();\n\n\twhile(1){\n\tPannelkey_Polling();\n\n}\n\n/* Infinite loop */\n\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_1 Down\n* 功能说明: key1按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\nunsigned char Key_1_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n \n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_2_Down\n* 功能说明: key2按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_2_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n \n\n \n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_3_Down\n* 功能说明: key3按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_3_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_4_Down\n* 功能说明: key4按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_4_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_5_Down\n* 功能说明: key5按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_5_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_6_Down\n* 功能说明: key6按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_6_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_7_Down\n* 功能说明: key7按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_7_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_8_Down\n* 功能说明: key8按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_8_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_9_Down\n* 功能说明: key9按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_9_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_10_Down\n* 功能说明: key10按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_10_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_11_Down\n* 功能说明: key11按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_11_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_12_Down\n* 功能说明: key12按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_12_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_13_Down\n* 功能说明: key13按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_13_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_14_Down\n* 功能说明: key14按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_14_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_15_Down\n* 功能说明: key15按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_15_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_16_Down\n* 功能说明: key16按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_16_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: bsp_DetectButton\n* 功能说明: 检测一个按键。非阻塞状态，必须被周期性的调用。\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\nvoid Button_Detect(BUTTON_T *_pBtn)\n{\n\tif (_pBtn->IsKeyDownFunc())\n\t{\n\t\tif (_pBtn->Count < _pBtn->FilterTime)\n\t\t{\n\t\t_pBtn->Count = _pBtn->FilterTime;\n\t\t}\n\telse if(_pBtn->Count < 2 * _pBtn->FilterTime)\n\t{\n\t\t_pBtn->Count++;\n\t}\n\telse\n\t{\n\t\tif (_pBtn->State == 0)\n\t\t\t{\n\t\t\t_pBtn->State = 1;\n\n\t\t\t/* 发送按钮按下的消息 */\n\t\t\tif (_pBtn->KeyCodeDown > 0)\n\t\t\t\t{\n\t\t\t\t\t/* 键值放入按键FIFO */\n\t\t\t\t\tUART1_SendData8(_pBtn->KeyCodeDown);// 记录按键按下标志，等待释放\n\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t\t}\n\t\t\t}\n\n\t\tif (_pBtn->LongTime > 0)\n\t\t\t{\n\t\t\t\tif (_pBtn->LongCount < _pBtn->LongTime)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* 发送按钮持续按下的消息 */\n\t\t\t\t\t\tif (++_pBtn->LongCount == _pBtn->LongTime)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* 键值放入按键FIFO */\n\t\t\t\t\t\t\t\tUART1_SendData8(_pBtn->KeyCodeLong);\n\t\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\tif (_pBtn->RepeatSpeed > 0)\n\t\t\t\t\t{\n\t\t\t\t\tif (++_pBtn->RepeatCount >= _pBtn->RepeatSpeed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_pBtn->RepeatCount = 0;\n\t\t\t\t\t\t\t/* 常按键后，每隔10ms发送1个按键 */\n\t\t\t\t\t\t\tUART1_SendData8(_pBtn->KeyCodeDown);\n\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\tif(_pBtn->Count > _pBtn->FilterTime)\n\t{\n\t_pBtn->Count = _pBtn->FilterTime;\n\t}\n\telse if(_pBtn->Count != 0)\n\t{\n\t_pBtn->Count--;\n\t}\n\telse\n\t{\n\tif (_pBtn->State == 1)\n\t\t{\n\t\t\t_pBtn->State = 0;\n\n\t/* 发送按钮弹起的消息 */\n\t\t\tif (_pBtn->KeyCodeUp > 0) /*按键释放*/\n\t\t\t{\n\t\t\t/* 键值放入按键FIFO */\n\t\t\tUART1_SendData8(_pBtn->KeyCodeUp);\n\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t}\n\t\t}\n\t}\n\n\t_pBtn->LongCount = 0;\n\t_pBtn->RepeatCount = 0;\n\t}\n}\n\n//功能说明: 检测所有按键。10MS 调用一次\nvoid Pannelkey_Polling(void)\n{\n\tfor(u8 i=0;i<16;i++)\n\t{\n\t\tButton_Detect(&Key[i]); /*Key_1 键 */\n\t}\n\tdelay_ms(10);\n}\n\n \n\nstatic void UART_Config(void)\n{\n\t/* Deinitializes the UART1 and UART3 peripheral */\n\tUART1_DeInit();\n\t// UART3_DeInit();\n\t/* UART1 and UART3 configuration -------------------------------------------------*/\n\t/* UART1 and UART3 configured as follow:\n\t- BaudRate = 9600 baud\n\t- Word Length = 8 Bits\n\t- One Stop Bit\n\t- No parity\n\t- Receive and transmit enabled\n\t- UART1 Clock disabled\n\t*/\n\t/* Configure the UART1 */\n\tUART1_Init((u32)9600, UART1_WORDLENGTH_8D, UART1_STOPBITS_1, UART1_PARITY_NO,\n\tUART1_SYNCMODE_CLOCK_DISABLE, UART1_MODE_TXRX_ENABLE);\n\n\t/* Enable UART1 Transmit interrupt*/\n\tUART1_ITConfig(UART1_IT_RXNE_OR, ENABLE);\n\n\tenableInterrupts();\n\tUART1_Cmd(ENABLE);\n\tUART1_SendData8(0x00);\n}\n\n \n\nvoid Key_Init()\n{\n\tfor(u8 i=0;i<16;i++){\n\t\t/* 初始化USER按键变量，支持按下、弹起、长按 */\n\t\t// Key[i].IsKeyDownFunc = Key_Down; /* 判断按键按下的函数 */\n\t\tKey[i].FilterTime = BUTTON_FILTER_TIME; /* 按键滤波时间 */\n\t\tKey[i].LongTime = BUTTON_LONG_TIME; /* 长按时间 */\n\t\tKey[i].Count = Key[i].FilterTime / 2; /* 计数器设置为滤波时间的一半 */\n\t\tKey[i].State = 0; /* 按键缺省状态，0为未按下 */\n\t\tKey[i].KeyCodeDown = KeyDownCode[i]; /* 按键按下的键值代码 */\n\t\tKey[i].KeyCodeUp =KeyUpCode[i]; /* 按键弹起的键值代码 */\n\t\tKey[i].KeyCodeLong = KeyLongCode[i]; /* 按键被持续按下的键值代码 */\n\t\tKey[i].RepeatSpeed = 0; /* 按键连发的速度，0表示不支持连发 */\n\t\tKey[i].RepeatCount = 0; /* 连发计数器 */\n\t\tswitch(i){\n\t\tcase 0:\n\t\tKey[0].IsKeyDownFunc = Key_1_Down;\n\t\tbreak;\n\t\tcase 1:\n\t\tKey[1].IsKeyDownFunc = Key_2_Down;\n\t\tbreak;\n\t\tcase 2:\n\t\tKey[2].IsKeyDownFunc = Key_3_Down;\n\t\tbreak;\n\t\tcase 3:\n\t\tKey[3].IsKeyDownFunc = Key_4_Down;\n\t\tbreak;\n\t\tcase 4:\n\t\tKey[4].IsKeyDownFunc = Key_5_Down;\n\t\tbreak;\n\t\tcase 5:\n\t\tKey[5].IsKeyDownFunc = Key_6_Down;\n\t\tbreak;\n\t\tcase 6:\n\t\tKey[6].IsKeyDownFunc = Key_7_Down;\n\t\tbreak;\n\t\tcase 7:\n\t\tKey[7].IsKeyDownFunc = Key_8_Down;\n\t\tbreak;\n\t\tcase 8:\n\t\tKey[8].IsKeyDownFunc = Key_9_Down;\n\t\tbreak;\n\t\tcase 9:\n\t\tKey[9].IsKeyDownFunc = Key_10_Down;\n\t\tbreak;\n\t\tcase 10:\n\t\tKey[10].IsKeyDownFunc = Key_11_Down;\n\t\tbreak;\n\t\tcase 11:\n\t\tKey[11].IsKeyDownFunc = Key_12_Down;\n\t\tbreak;\n\t\tcase 12:\n\t\tKey[12].IsKeyDownFunc = Key_13_Down;\n\t\tbreak;\n\t\tcase 13:\n\t\tKey[13].IsKeyDownFunc = Key_14_Down;\n\t\tbreak;\n\t\tcase 14:\n\t\tKey[14].IsKeyDownFunc = Key_15_Down;\n\t\tbreak;\n\t\tcase 15:\n\t\tKey[15].IsKeyDownFunc = Key_16_Down;\n\t\tbreak;\n\t\t}\n\t}\n}\n```","source":"_posts/stm8矩阵键盘扫描程序.md","raw":"---\ntitle: \"stm8矩阵键盘扫描程序\"\ndate: 2017-07-13 00:49:25\ntoc: false\ntags: [单片机,stm8]\n---\n按键通常有：IO口按键（BUTTON)，AD按键（通过AD采样电压），IR（遥控器）\n按按键功能分：有短按键，长按键，连续按键。打个比方，遥控电视机，按一下音量键，音量增加1，这个就是短按键。按住音量键不放，音量连续加，这个就是连续按键。按住一个按键5s,系统会复位，这个是长按键。\n<!-- more -->\nIO口按键，就是我们比较常见的一个IO接一个按键，或者是一个矩阵键盘。很多新人的处理方法可能是采样延时的方法，当年我也是这样的，如下\n```\n   if(GETIO==low)\n    { \n      delay_10ms()\n      if(GETIO==low)\n      {\n        //得到按键值\n      }\n    }\n```\n这种方法虽然简单，但是有很大弊端。首先 Delay浪费很多时间，影响系统。第二，无法判断长短按键，连续按键。第三，如果这个按键是开关机按键系统在低功耗状态下，需要中断唤醒，这种方法比较容易出问题，如STM8S系列的\nhalt 模式。\n\n所以我们一般在产品开发的过程中，采用扫描的方法，就是每隔10ms或者20ms 去检测IO的状态，看是否有按键，然后去抖动，判断按键功能。\n\n下面是本人写的4*4矩阵键盘扫描程序代码，容易修改，可以根据自己的时间需要，进行长短按键，连续按键,还有组合按键的判断。\n\n \n```\n/* Includes ------------------------------------------------------------------*/\n#include \"stm8s.h\"\n#include \"delay.h\"\n/* Private defines -----------------------------------------------------------*/\n\n#define BUTTON_FILTER_TIME 5\n#define BUTTON_LONG_TIME 50 /* 持续1秒，认为长按事件 */\n\n/**\n******************************************************************************\n宏定义设定行号和列号\n按键序号排列\n\n第一列 第二列 第三列 第四列\n\n第一行 1 2 3 4\n\n第二行 5 6 7 8\n\n第三行 9 10 11 12\n\n第四行 13 14 15 16\n\n \n\n******************************************************************************\n*/\n\n#define ROW_1 GPIOC, GPIO_PIN_4 /* 按键第一行*/\n#define ROW_2 GPIOC, GPIO_PIN_5 /* 按键第二行*/\n#define ROW_3 GPIOC, GPIO_PIN_6 /* 按键第三行*/\n#define ROW_4 GPIOC, GPIO_PIN_7 /* 按键第四行*/\n#define COLUMN_1 GPIOA, GPIO_PIN_1 /* 按键第一列*/\n#define COLUMN_2 GPIOA, GPIO_PIN_2 /* 按键第二列*/\n#define COLUMN_3 GPIOA, GPIO_PIN_3 /* 按键第三列*/\n#define COLUMN_4 GPIOD, GPIO_PIN_4 /* 按键第四列*/\n\n \n\n \n\nu8 KeyDownCode[]= {0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f};\n//按键按下的键值\nu8 KeyUpCode[]={0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f};\n//按键弹起的键值\nu8 KeyLongCode[]={0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfe,0xff};\n//按键长按的键值\n\n \n\ntypedef struct\n{\n/* 下面是一个函数指针，指向判断按键手否按下的函数 */\n\n\tunsigned char (*IsKeyDownFunc)(void); /* 按键按下的判断函数,1表示按下 */\n\tunsigned char Count; /* 滤波器计数器 */\n\tunsigned char FilterTime; /* 滤波时间(最大255,表示2550ms) */\n\tunsigned short LongCount; /* 长按计数器 */\n\tunsigned short LongTime; /* 按键按下持续时间, 0表示不检测长按 */\n\tunsigned char State; /* 按键当前状态（按下还是弹起） */\n\tunsigned char KeyCodeUp; /* 按键弹起的键值代码, 0表示不检测按键弹起 */\n\tunsigned char KeyCodeDown; /* 按键按下的键值代码, 0表示不检测按键按下 */\n\tunsigned char KeyCodeLong; /* 按键长按的键值代码, 0表示不检测长按 */\n\tunsigned char RepeatSpeed; /* 连续按键周期 */\n\tunsigned char RepeatCount; /* 连续按键计数器 */\n}BUTTON_T;\n\nBUTTON_T Key[16];\n\n \n\n \n\n/* Private function prototypes -----------------------------------------------*/\n/* Private functions ---------------------------------------------------------*/\nstatic void UART_Config(void);\n\nvoid Pannelkey_Polling(void);\nvoid Button_Detect(BUTTON_T *_pBtn);\n\n \n\nvoid Key_Init(void);\n//矩阵键盘扫描按键检测按下函数\nunsigned char Key_1_Down(void);\nunsigned char Key_2_Down(void);\nunsigned char Key_3_Down(void);\nunsigned char Key_4_Down(void);\nunsigned char Key_5_Down(void);\nunsigned char Key_6_Down(void);\nunsigned char Key_7_Down(void);\nunsigned char Key_8_Down(void);\nunsigned char Key_9_Down(void);\nunsigned char Key_10_Down(void);\nunsigned char Key_11_Down(void);\nunsigned char Key_12_Down(void);\nunsigned char Key_13_Down(void);\nunsigned char Key_14_Down(void);\nunsigned char Key_15_Down(void);\nunsigned char Key_16_Down(void);\n//矩阵键盘扫描按键检测按下函数\n//\n//u8 KeyValue,COLUMN_VALUE1,COLUMN_VALUE2,COLUMN_VALUE3,COLUMN_VALUE4,column_value;\n//u8 ROW_VALUE1,ROW_VALUE2,ROW_VALUE3,ROW_VALUE4,row_value;\n\n/* 按键滤波时间50ms, 单位10ms\n*只有连续检测到50ms状态不变才认为有效，包括弹起和按下两种事件\n*/\n\n \n\n/*\n每个按键对应1个全局的结构体变量。\n其成员变量是实现滤波和多种按键状态所必须的\n*/\n\nvoid main(void)\n{\n\tCLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);\n\tCLK_HSICmd(ENABLE);\n\n\tdelay_init(16);\n\tKey_Init();\n\tUART_Config();\n\n\twhile(1){\n\tPannelkey_Polling();\n\n}\n\n/* Infinite loop */\n\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_1 Down\n* 功能说明: key1按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\nunsigned char Key_1_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n \n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_2_Down\n* 功能说明: key2按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_2_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n \n\n \n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_3_Down\n* 功能说明: key3按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_3_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_4_Down\n* 功能说明: key4按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_4_Down(void)\n{\n\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出\n\tGPIO_WriteLow(ROW_1);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_1);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: Key_5_Down\n* 功能说明: key5按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_5_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_6_Down\n* 功能说明: key6按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_6_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_7_Down\n* 功能说明: key7按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_7_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_8_Down\n* 功能说明: key8按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_8_Down(void)\n{\n\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出\n\tGPIO_WriteLow(ROW_2);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_2);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_9_Down\n* 功能说明: key9按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_9_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_10_Down\n* 功能说明: key10按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_10_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_11_Down\n* 功能说明: key11按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_11_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_12_Down\n* 功能说明: key12按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_12_Down(void)\n{\n\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出\n\tGPIO_WriteLow(ROW_3);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_3);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_13_Down\n* 功能说明: key13按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_13_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);\n\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出\n\tGPIO_WriteLow(COLUMN_1);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_14_Down\n* 功能说明: key14按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_14_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);\n\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出\n\tGPIO_WriteLow(COLUMN_2);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_15_Down\n* 功能说明: key15按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_15_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);\n\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出\n\tGPIO_WriteLow(COLUMN_3);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n/*\n*********************************************************************************************************\n* 函 数 名: Key_16_Down\n* 功能说明: key16按键状态测试\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\n\nunsigned char Key_16_Down(void)\n{\n\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出\n\tGPIO_WriteLow(ROW_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入\n\t//delay_us(5);\n\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);\n\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出\n\tGPIO_WriteLow(COLUMN_4);\n\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入\n\tu8 row_temp=GPIO_ReadInputPin(ROW_4);\n\tif(column_temp || row_temp)\n\t\treturn 0;\n\treturn 1;\n}\n\n/*\n*********************************************************************************************************\n* 函 数 名: bsp_DetectButton\n* 功能说明: 检测一个按键。非阻塞状态，必须被周期性的调用。\n* 形 参：按键结构变量指针\n* 返 回 值: 无\n*********************************************************************************************************\n*/\nvoid Button_Detect(BUTTON_T *_pBtn)\n{\n\tif (_pBtn->IsKeyDownFunc())\n\t{\n\t\tif (_pBtn->Count < _pBtn->FilterTime)\n\t\t{\n\t\t_pBtn->Count = _pBtn->FilterTime;\n\t\t}\n\telse if(_pBtn->Count < 2 * _pBtn->FilterTime)\n\t{\n\t\t_pBtn->Count++;\n\t}\n\telse\n\t{\n\t\tif (_pBtn->State == 0)\n\t\t\t{\n\t\t\t_pBtn->State = 1;\n\n\t\t\t/* 发送按钮按下的消息 */\n\t\t\tif (_pBtn->KeyCodeDown > 0)\n\t\t\t\t{\n\t\t\t\t\t/* 键值放入按键FIFO */\n\t\t\t\t\tUART1_SendData8(_pBtn->KeyCodeDown);// 记录按键按下标志，等待释放\n\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t\t}\n\t\t\t}\n\n\t\tif (_pBtn->LongTime > 0)\n\t\t\t{\n\t\t\t\tif (_pBtn->LongCount < _pBtn->LongTime)\n\t\t\t\t\t{\n\t\t\t\t\t\t/* 发送按钮持续按下的消息 */\n\t\t\t\t\t\tif (++_pBtn->LongCount == _pBtn->LongTime)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* 键值放入按键FIFO */\n\t\t\t\t\t\t\t\tUART1_SendData8(_pBtn->KeyCodeLong);\n\t\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\tif (_pBtn->RepeatSpeed > 0)\n\t\t\t\t\t{\n\t\t\t\t\tif (++_pBtn->RepeatCount >= _pBtn->RepeatSpeed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_pBtn->RepeatCount = 0;\n\t\t\t\t\t\t\t/* 常按键后，每隔10ms发送1个按键 */\n\t\t\t\t\t\t\tUART1_SendData8(_pBtn->KeyCodeDown);\n\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\tif(_pBtn->Count > _pBtn->FilterTime)\n\t{\n\t_pBtn->Count = _pBtn->FilterTime;\n\t}\n\telse if(_pBtn->Count != 0)\n\t{\n\t_pBtn->Count--;\n\t}\n\telse\n\t{\n\tif (_pBtn->State == 1)\n\t\t{\n\t\t\t_pBtn->State = 0;\n\n\t/* 发送按钮弹起的消息 */\n\t\t\tif (_pBtn->KeyCodeUp > 0) /*按键释放*/\n\t\t\t{\n\t\t\t/* 键值放入按键FIFO */\n\t\t\tUART1_SendData8(_pBtn->KeyCodeUp);\n\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );\n\t\t\t}\n\t\t}\n\t}\n\n\t_pBtn->LongCount = 0;\n\t_pBtn->RepeatCount = 0;\n\t}\n}\n\n//功能说明: 检测所有按键。10MS 调用一次\nvoid Pannelkey_Polling(void)\n{\n\tfor(u8 i=0;i<16;i++)\n\t{\n\t\tButton_Detect(&Key[i]); /*Key_1 键 */\n\t}\n\tdelay_ms(10);\n}\n\n \n\nstatic void UART_Config(void)\n{\n\t/* Deinitializes the UART1 and UART3 peripheral */\n\tUART1_DeInit();\n\t// UART3_DeInit();\n\t/* UART1 and UART3 configuration -------------------------------------------------*/\n\t/* UART1 and UART3 configured as follow:\n\t- BaudRate = 9600 baud\n\t- Word Length = 8 Bits\n\t- One Stop Bit\n\t- No parity\n\t- Receive and transmit enabled\n\t- UART1 Clock disabled\n\t*/\n\t/* Configure the UART1 */\n\tUART1_Init((u32)9600, UART1_WORDLENGTH_8D, UART1_STOPBITS_1, UART1_PARITY_NO,\n\tUART1_SYNCMODE_CLOCK_DISABLE, UART1_MODE_TXRX_ENABLE);\n\n\t/* Enable UART1 Transmit interrupt*/\n\tUART1_ITConfig(UART1_IT_RXNE_OR, ENABLE);\n\n\tenableInterrupts();\n\tUART1_Cmd(ENABLE);\n\tUART1_SendData8(0x00);\n}\n\n \n\nvoid Key_Init()\n{\n\tfor(u8 i=0;i<16;i++){\n\t\t/* 初始化USER按键变量，支持按下、弹起、长按 */\n\t\t// Key[i].IsKeyDownFunc = Key_Down; /* 判断按键按下的函数 */\n\t\tKey[i].FilterTime = BUTTON_FILTER_TIME; /* 按键滤波时间 */\n\t\tKey[i].LongTime = BUTTON_LONG_TIME; /* 长按时间 */\n\t\tKey[i].Count = Key[i].FilterTime / 2; /* 计数器设置为滤波时间的一半 */\n\t\tKey[i].State = 0; /* 按键缺省状态，0为未按下 */\n\t\tKey[i].KeyCodeDown = KeyDownCode[i]; /* 按键按下的键值代码 */\n\t\tKey[i].KeyCodeUp =KeyUpCode[i]; /* 按键弹起的键值代码 */\n\t\tKey[i].KeyCodeLong = KeyLongCode[i]; /* 按键被持续按下的键值代码 */\n\t\tKey[i].RepeatSpeed = 0; /* 按键连发的速度，0表示不支持连发 */\n\t\tKey[i].RepeatCount = 0; /* 连发计数器 */\n\t\tswitch(i){\n\t\tcase 0:\n\t\tKey[0].IsKeyDownFunc = Key_1_Down;\n\t\tbreak;\n\t\tcase 1:\n\t\tKey[1].IsKeyDownFunc = Key_2_Down;\n\t\tbreak;\n\t\tcase 2:\n\t\tKey[2].IsKeyDownFunc = Key_3_Down;\n\t\tbreak;\n\t\tcase 3:\n\t\tKey[3].IsKeyDownFunc = Key_4_Down;\n\t\tbreak;\n\t\tcase 4:\n\t\tKey[4].IsKeyDownFunc = Key_5_Down;\n\t\tbreak;\n\t\tcase 5:\n\t\tKey[5].IsKeyDownFunc = Key_6_Down;\n\t\tbreak;\n\t\tcase 6:\n\t\tKey[6].IsKeyDownFunc = Key_7_Down;\n\t\tbreak;\n\t\tcase 7:\n\t\tKey[7].IsKeyDownFunc = Key_8_Down;\n\t\tbreak;\n\t\tcase 8:\n\t\tKey[8].IsKeyDownFunc = Key_9_Down;\n\t\tbreak;\n\t\tcase 9:\n\t\tKey[9].IsKeyDownFunc = Key_10_Down;\n\t\tbreak;\n\t\tcase 10:\n\t\tKey[10].IsKeyDownFunc = Key_11_Down;\n\t\tbreak;\n\t\tcase 11:\n\t\tKey[11].IsKeyDownFunc = Key_12_Down;\n\t\tbreak;\n\t\tcase 12:\n\t\tKey[12].IsKeyDownFunc = Key_13_Down;\n\t\tbreak;\n\t\tcase 13:\n\t\tKey[13].IsKeyDownFunc = Key_14_Down;\n\t\tbreak;\n\t\tcase 14:\n\t\tKey[14].IsKeyDownFunc = Key_15_Down;\n\t\tbreak;\n\t\tcase 15:\n\t\tKey[15].IsKeyDownFunc = Key_16_Down;\n\t\tbreak;\n\t\t}\n\t}\n}\n```","slug":"stm8矩阵键盘扫描程序","published":1,"updated":"2018-06-02T11:52:53.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjhxdzsmt0007d4tw1zgx3ank","content":"<p>按键通常有：IO口按键（BUTTON)，AD按键（通过AD采样电压），IR（遥控器）<br>按按键功能分：有短按键，长按键，连续按键。打个比方，遥控电视机，按一下音量键，音量增加1，这个就是短按键。按住音量键不放，音量连续加，这个就是连续按键。按住一个按键5s,系统会复位，这个是长按键。<br><a id=\"more\"></a><br>IO口按键，就是我们比较常见的一个IO接一个按键，或者是一个矩阵键盘。很多新人的处理方法可能是采样延时的方法，当年我也是这样的，如下<br><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"comment\">(GETIO==low)</span></span><br><span class=\"line\"> &#123; </span><br><span class=\"line\">   delay_<span class=\"number\">10</span>ms<span class=\"comment\">()</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span><span class=\"comment\">(GETIO==low)</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     <span class=\"comment\">//得到按键值</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>这种方法虽然简单，但是有很大弊端。首先 Delay浪费很多时间，影响系统。第二，无法判断长短按键，连续按键。第三，如果这个按键是开关机按键系统在低功耗状态下，需要中断唤醒，这种方法比较容易出问题，如STM8S系列的<br>halt 模式。</p>\n<p>所以我们一般在产品开发的过程中，采用扫描的方法，就是每隔10ms或者20ms 去检测IO的状态，看是否有按键，然后去抖动，判断按键功能。</p>\n<p>下面是本人写的4*4矩阵键盘扫描程序代码，容易修改，可以根据自己的时间需要，进行长短按键，连续按键,还有组合按键的判断。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"bullet\">* Includes ------------------------------------------------------------------*</span>/</span><br><span class=\"line\"><span class=\"section\">#include \"stm8s.h\"</span></span><br><span class=\"line\"><span class=\"section\">#include \"delay.h\"</span></span><br><span class=\"line\">/<span class=\"bullet\">* Private defines -----------------------------------------------------------*</span>/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#define BUTTON_FILTER_TIME 5</span></span><br><span class=\"line\"><span class=\"section\">#define BUTTON_LONG_TIME 50 /* 持续1秒，认为长按事件 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span></span><br><span class=\"line\">宏定义设定行号和列号</span><br><span class=\"line\">按键序号排列</span><br><span class=\"line\"></span><br><span class=\"line\">第一列 第二列 第三列 第四列</span><br><span class=\"line\"></span><br><span class=\"line\">第一行 1 2 3 4</span><br><span class=\"line\"></span><br><span class=\"line\">第二行 5 6 7 8</span><br><span class=\"line\"></span><br><span class=\"line\">第三行 9 10 11 12</span><br><span class=\"line\"></span><br><span class=\"line\">第四行 13 14 15 16</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#define ROW_1 GPIOC, GPIO_PIN_4 /* 按键第一行*/</span></span><br><span class=\"line\"><span class=\"section\">#define ROW_2 GPIOC, GPIO_PIN_5 /* 按键第二行*/</span></span><br><span class=\"line\"><span class=\"section\">#define ROW_3 GPIOC, GPIO_PIN_6 /* 按键第三行*/</span></span><br><span class=\"line\"><span class=\"section\">#define ROW_4 GPIOC, GPIO_PIN_7 /* 按键第四行*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_1 GPIOA, GPIO_PIN_1 /* 按键第一列*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_2 GPIOA, GPIO_PIN_2 /* 按键第二列*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_3 GPIOA, GPIO_PIN_3 /* 按键第三列*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_4 GPIOD, GPIO_PIN_4 /* 按键第四列*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">u8 KeyDownCode[]= &#123;0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f&#125;;</span><br><span class=\"line\">//按键按下的键值</span><br><span class=\"line\">u8 KeyUpCode[]=&#123;0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f&#125;;</span><br><span class=\"line\">//按键弹起的键值</span><br><span class=\"line\">u8 KeyLongCode[]=&#123;0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfe,0xff&#125;;</span><br><span class=\"line\">//按键长按的键值</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">typedef struct</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">/<span class=\"bullet\">* 下面是一个函数指针，指向判断按键手否按下的函数 *</span>/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tunsigned char (*IsKeyDownFunc)(void); /* 按键按下的判断函数,1表示按下 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char Count; /* 滤波器计数器 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char FilterTime; /* 滤波时间(最大255,表示2550ms) */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned short LongCount; /* 长按计数器 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned short LongTime; /* 按键按下持续时间, 0表示不检测长按 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char State; /* 按键当前状态（按下还是弹起） */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char KeyCodeUp; /* 按键弹起的键值代码, 0表示不检测按键弹起 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char KeyCodeDown; /* 按键按下的键值代码, 0表示不检测按键按下 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char KeyCodeLong; /* 按键长按的键值代码, 0表示不检测长按 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char RepeatSpeed; /* 连续按键周期 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char RepeatCount; /* 连续按键计数器 */</span></span><br><span class=\"line\">&#125;BUTTON_T;</span><br><span class=\"line\"></span><br><span class=\"line\">BUTTON_T Key[16];</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"bullet\">* Private function prototypes -----------------------------------------------*</span>/</span><br><span class=\"line\">/<span class=\"bullet\">* Private functions ---------------------------------------------------------*</span>/</span><br><span class=\"line\">static void UART_Config(void);</span><br><span class=\"line\"></span><br><span class=\"line\">void Pannelkey_Polling(void);</span><br><span class=\"line\">void Button<span class=\"emphasis\">_Detect(BUTTON_</span>T *_pBtn);</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">void Key_Init(void);</span><br><span class=\"line\">//矩阵键盘扫描按键检测按下函数</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_1_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_2_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_3_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_4_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_5_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_6_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_7_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_8_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_9_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_10_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_11_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_12_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_13_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_14_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_15_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_16_</span>Down(void);</span><br><span class=\"line\">//矩阵键盘扫描按键检测按下函数</span><br><span class=\"line\">//</span><br><span class=\"line\">//u8 KeyValue,COLUMN<span class=\"emphasis\">_VALUE1,COLUMN_</span>VALUE2,COLUMN<span class=\"emphasis\">_VALUE3,COLUMN_</span>VALUE4,column_value;</span><br><span class=\"line\">//u8 ROW<span class=\"emphasis\">_VALUE1,ROW_</span>VALUE2,ROW<span class=\"emphasis\">_VALUE3,ROW_</span>VALUE4,row_value;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 按键滤波时间50ms, 单位10ms</span><br><span class=\"line\">*只有连续检测到50ms状态不变才认为有效，包括弹起和按下两种事件</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">每个按键对应1个全局的结构体变量。</span><br><span class=\"line\">其成员变量是实现滤波和多种按键状态所必须的</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void main(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tCLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);</span></span><br><span class=\"line\"><span class=\"code\">\tCLK_HSICmd(ENABLE);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tdelay_init(16);</span></span><br><span class=\"line\"><span class=\"code\">\tKey_Init();</span></span><br><span class=\"line\"><span class=\"code\">\tUART_Config();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\twhile(1)&#123;</span></span><br><span class=\"line\"><span class=\"code\">\tPannelkey_Polling();</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"bullet\">* Infinite loop *</span>/</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key_1 Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key1按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_1_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_2_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key2按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_2_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_3_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key3按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_3_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_4_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key4按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_4_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_5_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key5按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_5_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_6_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key6按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_6_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_7_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key7按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_7_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_8_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key8按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_8_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_9_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key9按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_9_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_10_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key10按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_10_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_11_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key11按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_11_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_12_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key12按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_12_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_13_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key13按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_13_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_14_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key14按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_14_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_15_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key15按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_15_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_16_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key16按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_16_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: bsp_DetectButton</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: 检测一个按键。非阻塞状态，必须被周期性的调用。</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\">void Button<span class=\"emphasis\">_Detect(BUTTON_</span>T *_pBtn)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tif (_pBtn-&gt;IsKeyDownFunc())</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tif (_pBtn-&gt;Count &lt; _pBtn-&gt;FilterTime)</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t_pBtn-&gt;Count = _pBtn-&gt;FilterTime;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse if(_pBtn-&gt;Count &lt; 2 * _pBtn-&gt;FilterTime)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t_pBtn-&gt;Count++;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tif (_pBtn-&gt;State == 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t_pBtn-&gt;State = 1;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t\t\t/* 发送按钮按下的消息 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\tif (_pBtn-&gt;KeyCodeDown &gt; 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t/* 键值放入按键FIFO */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeDown);// 记录按键按下标志，等待释放</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t\tif (_pBtn-&gt;LongTime &gt; 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\tif (_pBtn-&gt;LongCount &lt; _pBtn-&gt;LongTime)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t/* 发送按钮持续按下的消息 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\tif (++_pBtn-&gt;LongCount == _pBtn-&gt;LongTime)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t\t/* 键值放入按键FIFO */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeLong);</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\telse</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\tif (_pBtn-&gt;RepeatSpeed &gt; 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\tif (++_pBtn-&gt;RepeatCount &gt;= _pBtn-&gt;RepeatSpeed)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t_pBtn-&gt;RepeatCount = 0;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t/* 常按键后，每隔10ms发送1个按键 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeDown);</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\tif(_pBtn-&gt;Count &gt; _pBtn-&gt;FilterTime)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;Count = _pBtn-&gt;FilterTime;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse if(_pBtn-&gt;Count != 0)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;Count--;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\tif (_pBtn-&gt;State == 1)</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t_pBtn-&gt;State = 0;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t/* 发送按钮弹起的消息 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\tif (_pBtn-&gt;KeyCodeUp &gt; 0) /*按键释放*/</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t/* 键值放入按键FIFO */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeUp);</span></span><br><span class=\"line\"><span class=\"code\">\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;LongCount = 0;</span></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;RepeatCount = 0;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//功能说明: 检测所有按键。10MS 调用一次</span><br><span class=\"line\">void Pannelkey_Polling(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tfor(u8 i=0;i&lt;16;i++)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tButton_Detect(&amp;Key[i]); /*Key_1 键 */</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\tdelay_ms(10);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">static void UART_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\t/* Deinitializes the UART1 and UART3 peripheral */</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_DeInit();</span></span><br><span class=\"line\"><span class=\"code\">\t// UART3_DeInit();</span></span><br><span class=\"line\"><span class=\"code\">\t/* UART1 and UART3 configuration -------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"code\">\t/* UART1 and UART3 configured as follow:</span></span><br><span class=\"line\"><span class=\"code\">\t- BaudRate = 9600 baud</span></span><br><span class=\"line\"><span class=\"code\">\t- Word Length = 8 Bits</span></span><br><span class=\"line\"><span class=\"code\">\t- One Stop Bit</span></span><br><span class=\"line\"><span class=\"code\">\t- No parity</span></span><br><span class=\"line\"><span class=\"code\">\t- Receive and transmit enabled</span></span><br><span class=\"line\"><span class=\"code\">\t- UART1 Clock disabled</span></span><br><span class=\"line\"><span class=\"code\">\t*/</span></span><br><span class=\"line\"><span class=\"code\">\t/* Configure the UART1 */</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_Init((u32)9600, UART1_WORDLENGTH_8D, UART1_STOPBITS_1, UART1_PARITY_NO,</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_SYNCMODE_CLOCK_DISABLE, UART1_MODE_TXRX_ENABLE);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t/* Enable UART1 Transmit interrupt*/</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_ITConfig(UART1_IT_RXNE_OR, ENABLE);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tenableInterrupts();</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_Cmd(ENABLE);</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_SendData8(0x00);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">void Key_Init()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tfor(u8 i=0;i&lt;16;i++)&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t/* 初始化USER按键变量，支持按下、弹起、长按 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t// Key[i].IsKeyDownFunc = Key_Down; /* 判断按键按下的函数 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].FilterTime = BUTTON_FILTER_TIME; /* 按键滤波时间 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].LongTime = BUTTON_LONG_TIME; /* 长按时间 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].Count = Key[i].FilterTime / 2; /* 计数器设置为滤波时间的一半 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].State = 0; /* 按键缺省状态，0为未按下 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].KeyCodeDown = KeyDownCode[i]; /* 按键按下的键值代码 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].KeyCodeUp =KeyUpCode[i]; /* 按键弹起的键值代码 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].KeyCodeLong = KeyLongCode[i]; /* 按键被持续按下的键值代码 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].RepeatSpeed = 0; /* 按键连发的速度，0表示不支持连发 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].RepeatCount = 0; /* 连发计数器 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tswitch(i)&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 0:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[0].IsKeyDownFunc = Key_1_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 1:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[1].IsKeyDownFunc = Key_2_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 2:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[2].IsKeyDownFunc = Key_3_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 3:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[3].IsKeyDownFunc = Key_4_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 4:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[4].IsKeyDownFunc = Key_5_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 5:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[5].IsKeyDownFunc = Key_6_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 6:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[6].IsKeyDownFunc = Key_7_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 7:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[7].IsKeyDownFunc = Key_8_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 8:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[8].IsKeyDownFunc = Key_9_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 9:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[9].IsKeyDownFunc = Key_10_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 10:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[10].IsKeyDownFunc = Key_11_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 11:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[11].IsKeyDownFunc = Key_12_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 12:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[12].IsKeyDownFunc = Key_13_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 13:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[13].IsKeyDownFunc = Key_14_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 14:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[14].IsKeyDownFunc = Key_15_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 15:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[15].IsKeyDownFunc = Key_16_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>按键通常有：IO口按键（BUTTON)，AD按键（通过AD采样电压），IR（遥控器）<br>按按键功能分：有短按键，长按键，连续按键。打个比方，遥控电视机，按一下音量键，音量增加1，这个就是短按键。按住音量键不放，音量连续加，这个就是连续按键。按住一个按键5s,系统会复位，这个是长按键。<br>","more":"<br>IO口按键，就是我们比较常见的一个IO接一个按键，或者是一个矩阵键盘。很多新人的处理方法可能是采样延时的方法，当年我也是这样的，如下<br><figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span><span class=\"comment\">(GETIO==low)</span></span><br><span class=\"line\"> &#123; </span><br><span class=\"line\">   delay_<span class=\"number\">10</span>ms<span class=\"comment\">()</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span><span class=\"comment\">(GETIO==low)</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     <span class=\"comment\">//得到按键值</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>这种方法虽然简单，但是有很大弊端。首先 Delay浪费很多时间，影响系统。第二，无法判断长短按键，连续按键。第三，如果这个按键是开关机按键系统在低功耗状态下，需要中断唤醒，这种方法比较容易出问题，如STM8S系列的<br>halt 模式。</p>\n<p>所以我们一般在产品开发的过程中，采用扫描的方法，就是每隔10ms或者20ms 去检测IO的状态，看是否有按键，然后去抖动，判断按键功能。</p>\n<p>下面是本人写的4*4矩阵键盘扫描程序代码，容易修改，可以根据自己的时间需要，进行长短按键，连续按键,还有组合按键的判断。</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/<span class=\"bullet\">* Includes ------------------------------------------------------------------*</span>/</span><br><span class=\"line\"><span class=\"section\">#include \"stm8s.h\"</span></span><br><span class=\"line\"><span class=\"section\">#include \"delay.h\"</span></span><br><span class=\"line\">/<span class=\"bullet\">* Private defines -----------------------------------------------------------*</span>/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#define BUTTON_FILTER_TIME 5</span></span><br><span class=\"line\"><span class=\"section\">#define BUTTON_LONG_TIME 50 /* 持续1秒，认为长按事件 */</span></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span></span><br><span class=\"line\">宏定义设定行号和列号</span><br><span class=\"line\">按键序号排列</span><br><span class=\"line\"></span><br><span class=\"line\">第一列 第二列 第三列 第四列</span><br><span class=\"line\"></span><br><span class=\"line\">第一行 1 2 3 4</span><br><span class=\"line\"></span><br><span class=\"line\">第二行 5 6 7 8</span><br><span class=\"line\"></span><br><span class=\"line\">第三行 9 10 11 12</span><br><span class=\"line\"></span><br><span class=\"line\">第四行 13 14 15 16</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"emphasis\">***</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">#define ROW_1 GPIOC, GPIO_PIN_4 /* 按键第一行*/</span></span><br><span class=\"line\"><span class=\"section\">#define ROW_2 GPIOC, GPIO_PIN_5 /* 按键第二行*/</span></span><br><span class=\"line\"><span class=\"section\">#define ROW_3 GPIOC, GPIO_PIN_6 /* 按键第三行*/</span></span><br><span class=\"line\"><span class=\"section\">#define ROW_4 GPIOC, GPIO_PIN_7 /* 按键第四行*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_1 GPIOA, GPIO_PIN_1 /* 按键第一列*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_2 GPIOA, GPIO_PIN_2 /* 按键第二列*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_3 GPIOA, GPIO_PIN_3 /* 按键第三列*/</span></span><br><span class=\"line\"><span class=\"section\">#define COLUMN_4 GPIOD, GPIO_PIN_4 /* 按键第四列*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">u8 KeyDownCode[]= &#123;0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f&#125;;</span><br><span class=\"line\">//按键按下的键值</span><br><span class=\"line\">u8 KeyUpCode[]=&#123;0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,0x2a,0x2b,0x2c,0x2d,0x2e,0x2f&#125;;</span><br><span class=\"line\">//按键弹起的键值</span><br><span class=\"line\">u8 KeyLongCode[]=&#123;0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfe,0xff&#125;;</span><br><span class=\"line\">//按键长按的键值</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">typedef struct</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">/<span class=\"bullet\">* 下面是一个函数指针，指向判断按键手否按下的函数 *</span>/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tunsigned char (*IsKeyDownFunc)(void); /* 按键按下的判断函数,1表示按下 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char Count; /* 滤波器计数器 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char FilterTime; /* 滤波时间(最大255,表示2550ms) */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned short LongCount; /* 长按计数器 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned short LongTime; /* 按键按下持续时间, 0表示不检测长按 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char State; /* 按键当前状态（按下还是弹起） */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char KeyCodeUp; /* 按键弹起的键值代码, 0表示不检测按键弹起 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char KeyCodeDown; /* 按键按下的键值代码, 0表示不检测按键按下 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char KeyCodeLong; /* 按键长按的键值代码, 0表示不检测长按 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char RepeatSpeed; /* 连续按键周期 */</span></span><br><span class=\"line\"><span class=\"code\">\tunsigned char RepeatCount; /* 连续按键计数器 */</span></span><br><span class=\"line\">&#125;BUTTON_T;</span><br><span class=\"line\"></span><br><span class=\"line\">BUTTON_T Key[16];</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"bullet\">* Private function prototypes -----------------------------------------------*</span>/</span><br><span class=\"line\">/<span class=\"bullet\">* Private functions ---------------------------------------------------------*</span>/</span><br><span class=\"line\">static void UART_Config(void);</span><br><span class=\"line\"></span><br><span class=\"line\">void Pannelkey_Polling(void);</span><br><span class=\"line\">void Button<span class=\"emphasis\">_Detect(BUTTON_</span>T *_pBtn);</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">void Key_Init(void);</span><br><span class=\"line\">//矩阵键盘扫描按键检测按下函数</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_1_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_2_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_3_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_4_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_5_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_6_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_7_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_8_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_9_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_10_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_11_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_12_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_13_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_14_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_15_</span>Down(void);</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_16_</span>Down(void);</span><br><span class=\"line\">//矩阵键盘扫描按键检测按下函数</span><br><span class=\"line\">//</span><br><span class=\"line\">//u8 KeyValue,COLUMN<span class=\"emphasis\">_VALUE1,COLUMN_</span>VALUE2,COLUMN<span class=\"emphasis\">_VALUE3,COLUMN_</span>VALUE4,column_value;</span><br><span class=\"line\">//u8 ROW<span class=\"emphasis\">_VALUE1,ROW_</span>VALUE2,ROW<span class=\"emphasis\">_VALUE3,ROW_</span>VALUE4,row_value;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 按键滤波时间50ms, 单位10ms</span><br><span class=\"line\">*只有连续检测到50ms状态不变才认为有效，包括弹起和按下两种事件</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">每个按键对应1个全局的结构体变量。</span><br><span class=\"line\">其成员变量是实现滤波和多种按键状态所必须的</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">void main(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tCLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV1);</span></span><br><span class=\"line\"><span class=\"code\">\tCLK_HSICmd(ENABLE);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tdelay_init(16);</span></span><br><span class=\"line\"><span class=\"code\">\tKey_Init();</span></span><br><span class=\"line\"><span class=\"code\">\tUART_Config();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\twhile(1)&#123;</span></span><br><span class=\"line\"><span class=\"code\">\tPannelkey_Polling();</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/<span class=\"bullet\">* Infinite loop *</span>/</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key_1 Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key1按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_1_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_2_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key2按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_2_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_3_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key3按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_3_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_4_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key4按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_4_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_1, GPIO_MODE_IN_PU_NO_IT);//行线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_1);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_5_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key5按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_5_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_6_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key6按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_6_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_7_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key7按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_7_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_8_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key8按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_8_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_2, GPIO_MODE_IN_PU_NO_IT);//行线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_2);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_9_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key9按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_9_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_10_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key10按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_10_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_11_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key11按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_11_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_12_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key12按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_12_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_3, GPIO_MODE_IN_PU_NO_IT);//行线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_3);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_13_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key13按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_13_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_IN_PU_NO_IT);//列线 1 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_1, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 1 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_1);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_14_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key14按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_14_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_IN_PU_NO_IT);//列线 2 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_2, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 2 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_2);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_15_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key15按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_15_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_IN_PU_NO_IT);//列线 3 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_3, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 3 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_3);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: Key<span class=\"emphasis\">_16_</span>Down</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: key16按键状态测试</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">unsigned char Key<span class=\"emphasis\">_16_</span>Down(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_OUT_PP_HIGH_FAST);//行线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_IN_PU_NO_IT);//列线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\t//delay_us(5);</span></span><br><span class=\"line\"><span class=\"code\">\tu8 column_temp=GPIO_ReadInputPin(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(COLUMN_4, GPIO_MODE_OUT_PP_HIGH_FAST);//列线 4 推挽输出</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_WriteLow(COLUMN_4);</span></span><br><span class=\"line\"><span class=\"code\">\tGPIO_Init(ROW_4, GPIO_MODE_IN_PU_NO_IT);//行线 4 上拉输入</span></span><br><span class=\"line\"><span class=\"code\">\tu8 row_temp=GPIO_ReadInputPin(ROW_4);</span></span><br><span class=\"line\"><span class=\"code\">\tif(column_temp || row_temp)</span></span><br><span class=\"line\"><span class=\"code\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"code\">\treturn 1;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\"><span class=\"bullet\">* </span>函 数 名: bsp_DetectButton</span><br><span class=\"line\"><span class=\"bullet\">* </span>功能说明: 检测一个按键。非阻塞状态，必须被周期性的调用。</span><br><span class=\"line\"><span class=\"bullet\">* </span>形 参：按键结构变量指针</span><br><span class=\"line\"><span class=\"bullet\">* </span>返 回 值: 无</span><br><span class=\"line\"><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span><span class=\"strong\">*****</span></span><br><span class=\"line\">*/</span><br><span class=\"line\">void Button<span class=\"emphasis\">_Detect(BUTTON_</span>T *_pBtn)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tif (_pBtn-&gt;IsKeyDownFunc())</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tif (_pBtn-&gt;Count &lt; _pBtn-&gt;FilterTime)</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t_pBtn-&gt;Count = _pBtn-&gt;FilterTime;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse if(_pBtn-&gt;Count &lt; 2 * _pBtn-&gt;FilterTime)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t_pBtn-&gt;Count++;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tif (_pBtn-&gt;State == 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t_pBtn-&gt;State = 1;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t\t\t/* 发送按钮按下的消息 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\tif (_pBtn-&gt;KeyCodeDown &gt; 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t/* 键值放入按键FIFO */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeDown);// 记录按键按下标志，等待释放</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t\tif (_pBtn-&gt;LongTime &gt; 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\tif (_pBtn-&gt;LongCount &lt; _pBtn-&gt;LongTime)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t/* 发送按钮持续按下的消息 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\tif (++_pBtn-&gt;LongCount == _pBtn-&gt;LongTime)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t\t/* 键值放入按键FIFO */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeLong);</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\telse</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\tif (_pBtn-&gt;RepeatSpeed &gt; 0)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\tif (++_pBtn-&gt;RepeatCount &gt;= _pBtn-&gt;RepeatSpeed)</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t_pBtn-&gt;RepeatCount = 0;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\t/* 常按键后，每隔10ms发送1个按键 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeDown);</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\tif(_pBtn-&gt;Count &gt; _pBtn-&gt;FilterTime)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;Count = _pBtn-&gt;FilterTime;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse if(_pBtn-&gt;Count != 0)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;Count--;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\telse</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\tif (_pBtn-&gt;State == 1)</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t_pBtn-&gt;State = 0;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t/* 发送按钮弹起的消息 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\tif (_pBtn-&gt;KeyCodeUp &gt; 0) /*按键释放*/</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t/* 键值放入按键FIFO */</span></span><br><span class=\"line\"><span class=\"code\">\t\t\tUART1_SendData8(_pBtn-&gt;KeyCodeUp);</span></span><br><span class=\"line\"><span class=\"code\">\t\t\twhile( UART1_GetFlagStatus(UART1_FLAG_TXE) == RESET );</span></span><br><span class=\"line\"><span class=\"code\">\t\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;LongCount = 0;</span></span><br><span class=\"line\"><span class=\"code\">\t_pBtn-&gt;RepeatCount = 0;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//功能说明: 检测所有按键。10MS 调用一次</span><br><span class=\"line\">void Pannelkey_Polling(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tfor(u8 i=0;i&lt;16;i++)</span></span><br><span class=\"line\"><span class=\"code\">\t&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tButton_Detect(&amp;Key[i]); /*Key_1 键 */</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\tdelay_ms(10);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">static void UART_Config(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\t/* Deinitializes the UART1 and UART3 peripheral */</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_DeInit();</span></span><br><span class=\"line\"><span class=\"code\">\t// UART3_DeInit();</span></span><br><span class=\"line\"><span class=\"code\">\t/* UART1 and UART3 configuration -------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"code\">\t/* UART1 and UART3 configured as follow:</span></span><br><span class=\"line\"><span class=\"code\">\t- BaudRate = 9600 baud</span></span><br><span class=\"line\"><span class=\"code\">\t- Word Length = 8 Bits</span></span><br><span class=\"line\"><span class=\"code\">\t- One Stop Bit</span></span><br><span class=\"line\"><span class=\"code\">\t- No parity</span></span><br><span class=\"line\"><span class=\"code\">\t- Receive and transmit enabled</span></span><br><span class=\"line\"><span class=\"code\">\t- UART1 Clock disabled</span></span><br><span class=\"line\"><span class=\"code\">\t*/</span></span><br><span class=\"line\"><span class=\"code\">\t/* Configure the UART1 */</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_Init((u32)9600, UART1_WORDLENGTH_8D, UART1_STOPBITS_1, UART1_PARITY_NO,</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_SYNCMODE_CLOCK_DISABLE, UART1_MODE_TXRX_ENABLE);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\t/* Enable UART1 Transmit interrupt*/</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_ITConfig(UART1_IT_RXNE_OR, ENABLE);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"code\">\tenableInterrupts();</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_Cmd(ENABLE);</span></span><br><span class=\"line\"><span class=\"code\">\tUART1_SendData8(0x00);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">void Key_Init()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"code\">\tfor(u8 i=0;i&lt;16;i++)&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\t/* 初始化USER按键变量，支持按下、弹起、长按 */</span></span><br><span class=\"line\"><span class=\"code\">\t\t// Key[i].IsKeyDownFunc = Key_Down; /* 判断按键按下的函数 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].FilterTime = BUTTON_FILTER_TIME; /* 按键滤波时间 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].LongTime = BUTTON_LONG_TIME; /* 长按时间 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].Count = Key[i].FilterTime / 2; /* 计数器设置为滤波时间的一半 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].State = 0; /* 按键缺省状态，0为未按下 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].KeyCodeDown = KeyDownCode[i]; /* 按键按下的键值代码 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].KeyCodeUp =KeyUpCode[i]; /* 按键弹起的键值代码 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].KeyCodeLong = KeyLongCode[i]; /* 按键被持续按下的键值代码 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].RepeatSpeed = 0; /* 按键连发的速度，0表示不支持连发 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[i].RepeatCount = 0; /* 连发计数器 */</span></span><br><span class=\"line\"><span class=\"code\">\t\tswitch(i)&#123;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 0:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[0].IsKeyDownFunc = Key_1_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 1:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[1].IsKeyDownFunc = Key_2_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 2:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[2].IsKeyDownFunc = Key_3_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 3:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[3].IsKeyDownFunc = Key_4_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 4:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[4].IsKeyDownFunc = Key_5_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 5:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[5].IsKeyDownFunc = Key_6_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 6:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[6].IsKeyDownFunc = Key_7_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 7:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[7].IsKeyDownFunc = Key_8_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 8:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[8].IsKeyDownFunc = Key_9_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 9:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[9].IsKeyDownFunc = Key_10_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 10:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[10].IsKeyDownFunc = Key_11_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 11:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[11].IsKeyDownFunc = Key_12_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 12:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[12].IsKeyDownFunc = Key_13_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 13:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[13].IsKeyDownFunc = Key_14_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 14:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[14].IsKeyDownFunc = Key_15_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\tcase 15:</span></span><br><span class=\"line\"><span class=\"code\">\t\tKey[15].IsKeyDownFunc = Key_16_Down;</span></span><br><span class=\"line\"><span class=\"code\">\t\tbreak;</span></span><br><span class=\"line\"><span class=\"code\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"code\">\t&#125;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjhxdzsmt0007d4tw1zgx3ank","tag_id":"cjhxdzsmm0002d4twwtmsk2z8","_id":"cjhxdzsmv0009d4twyej5gbxo"},{"post_id":"cjhxdzsmt0007d4tw1zgx3ank","tag_id":"cjhxdzsms0006d4twpo43nc61","_id":"cjhxdzsmv000ad4tw1se68g9g"},{"post_id":"cjhxdzsmd0000d4tw08ydjuf9","tag_id":"cjhxdzsmm0002d4twwtmsk2z8","_id":"cjhxdzsmw000cd4twaybdpvwm"},{"post_id":"cjhxdzsmd0000d4tw08ydjuf9","tag_id":"cjhxdzsms0006d4twpo43nc61","_id":"cjhxdzsmy000dd4tw8wbc5yrf"},{"post_id":"cjhxdzsmj0001d4twatvu8jt1","tag_id":"cjhxdzsmu0008d4twrkndxu2l","_id":"cjhxdzsmz000fd4twmvf18j0j"},{"post_id":"cjhxdzsmo0003d4tw9fr31n2c","tag_id":"cjhxdzsmm0002d4twwtmsk2z8","_id":"cjhxdzsn0000hd4twce2vn11u"},{"post_id":"cjhxdzsmo0003d4tw9fr31n2c","tag_id":"cjhxdzsmy000ed4twdhe82th0","_id":"cjhxdzsn0000id4twtppaf37j"},{"post_id":"cjhxdzsmp0004d4twx1q0gmy3","tag_id":"cjhxdzsmm0002d4twwtmsk2z8","_id":"cjhxdzsn1000kd4tw3b4m9805"},{"post_id":"cjhxdzsmp0004d4twx1q0gmy3","tag_id":"cjhxdzsms0006d4twpo43nc61","_id":"cjhxdzsn1000ld4twx2vkgitg"},{"post_id":"cjhxdzsmr0005d4twpy0dtu1m","tag_id":"cjhxdzsn1000jd4twdit41raz","_id":"cjhxdzsn2000md4tw4wzqe2ri"}],"Tag":[{"name":"单片机","_id":"cjhxdzsmm0002d4twwtmsk2z8"},{"name":"stm8","_id":"cjhxdzsms0006d4twpo43nc61"},{"name":"hexo","_id":"cjhxdzsmu0008d4twrkndxu2l"},{"name":"FSM","_id":"cjhxdzsmy000ed4twdhe82th0"},{"name":"c","_id":"cjhxdzsn1000jd4twdit41raz"}]}}